
new_led.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000274  0800027c  0001027c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000274  08000274  0001027c  2**0
                  CONTENTS
  4 .ARM          00000000  08000274  08000274  0001027c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000274  0800027c  0001027c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000274  08000274  00010274  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000278  08000278  00010278  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001027c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800027c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800027c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0001027c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000033e  00000000  00000000  000102a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000171  00000000  00000000  000105e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00010758  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  000107d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00008afb  00000000  00000000  00010820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000098c  00000000  00000000  0001931b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0002e4b9  00000000  00000000  00019ca7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00048160  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000c0  00000000  00000000  000481b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800025c 	.word	0x0800025c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	0800025c 	.word	0x0800025c

08000108 <led_init>:
#include "led.h"

#define GPIOA_EN (1 << 17)
#define LED_PIN (1 << 5);
void led_init(void){
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
	RCC->AHBENR |= GPIOA_EN;
 800010c:	4b0d      	ldr	r3, [pc, #52]	; (8000144 <led_init+0x3c>)
 800010e:	695a      	ldr	r2, [r3, #20]
 8000110:	4b0c      	ldr	r3, [pc, #48]	; (8000144 <led_init+0x3c>)
 8000112:	2180      	movs	r1, #128	; 0x80
 8000114:	0289      	lsls	r1, r1, #10
 8000116:	430a      	orrs	r2, r1
 8000118:	615a      	str	r2, [r3, #20]
	GPIOA->MODER |= (1 << 10);
 800011a:	2390      	movs	r3, #144	; 0x90
 800011c:	05db      	lsls	r3, r3, #23
 800011e:	681a      	ldr	r2, [r3, #0]
 8000120:	2390      	movs	r3, #144	; 0x90
 8000122:	05db      	lsls	r3, r3, #23
 8000124:	2180      	movs	r1, #128	; 0x80
 8000126:	00c9      	lsls	r1, r1, #3
 8000128:	430a      	orrs	r2, r1
 800012a:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1 << 11);
 800012c:	2390      	movs	r3, #144	; 0x90
 800012e:	05db      	lsls	r3, r3, #23
 8000130:	681a      	ldr	r2, [r3, #0]
 8000132:	2390      	movs	r3, #144	; 0x90
 8000134:	05db      	lsls	r3, r3, #23
 8000136:	4904      	ldr	r1, [pc, #16]	; (8000148 <led_init+0x40>)
 8000138:	400a      	ands	r2, r1
 800013a:	601a      	str	r2, [r3, #0]

}
 800013c:	46c0      	nop			; (mov r8, r8)
 800013e:	46bd      	mov	sp, r7
 8000140:	bd80      	pop	{r7, pc}
 8000142:	46c0      	nop			; (mov r8, r8)
 8000144:	40021000 	.word	0x40021000
 8000148:	fffff7ff 	.word	0xfffff7ff

0800014c <led_on>:

void led_on(void){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	GPIOA->ODR |= LED_PIN;
 8000150:	2390      	movs	r3, #144	; 0x90
 8000152:	05db      	lsls	r3, r3, #23
 8000154:	695a      	ldr	r2, [r3, #20]
 8000156:	2390      	movs	r3, #144	; 0x90
 8000158:	05db      	lsls	r3, r3, #23
 800015a:	2120      	movs	r1, #32
 800015c:	430a      	orrs	r2, r1
 800015e:	615a      	str	r2, [r3, #20]
}
 8000160:	46c0      	nop			; (mov r8, r8)
 8000162:	46bd      	mov	sp, r7
 8000164:	bd80      	pop	{r7, pc}

08000166 <led_off>:

void led_off(void){
 8000166:	b580      	push	{r7, lr}
 8000168:	af00      	add	r7, sp, #0
	GPIOA->ODR &= ~LED_PIN;
 800016a:	2390      	movs	r3, #144	; 0x90
 800016c:	05db      	lsls	r3, r3, #23
 800016e:	695a      	ldr	r2, [r3, #20]
 8000170:	2390      	movs	r3, #144	; 0x90
 8000172:	05db      	lsls	r3, r3, #23
 8000174:	2120      	movs	r1, #32
 8000176:	438a      	bics	r2, r1
 8000178:	615a      	str	r2, [r3, #20]
}
 800017a:	46c0      	nop			; (mov r8, r8)
 800017c:	46bd      	mov	sp, r7
 800017e:	bd80      	pop	{r7, pc}

08000180 <main>:
#include "led.h"

int main(){
 8000180:	b580      	push	{r7, lr}
 8000182:	b082      	sub	sp, #8
 8000184:	af00      	add	r7, sp, #0
	led_init();
 8000186:	f7ff ffbf 	bl	8000108 <led_init>

	while(1){
		led_on();
 800018a:	f7ff ffdf 	bl	800014c <led_on>
		for (int i=0; i<999990; i++);
 800018e:	2300      	movs	r3, #0
 8000190:	607b      	str	r3, [r7, #4]
 8000192:	e002      	b.n	800019a <main+0x1a>
 8000194:	687b      	ldr	r3, [r7, #4]
 8000196:	3301      	adds	r3, #1
 8000198:	607b      	str	r3, [r7, #4]
 800019a:	687b      	ldr	r3, [r7, #4]
 800019c:	4a07      	ldr	r2, [pc, #28]	; (80001bc <main+0x3c>)
 800019e:	4293      	cmp	r3, r2
 80001a0:	ddf8      	ble.n	8000194 <main+0x14>
		led_off();
 80001a2:	f7ff ffe0 	bl	8000166 <led_off>
		for (int i=0; i<999990; i++);
 80001a6:	2300      	movs	r3, #0
 80001a8:	603b      	str	r3, [r7, #0]
 80001aa:	e002      	b.n	80001b2 <main+0x32>
 80001ac:	683b      	ldr	r3, [r7, #0]
 80001ae:	3301      	adds	r3, #1
 80001b0:	603b      	str	r3, [r7, #0]
 80001b2:	683b      	ldr	r3, [r7, #0]
 80001b4:	4a01      	ldr	r2, [pc, #4]	; (80001bc <main+0x3c>)
 80001b6:	4293      	cmp	r3, r2
 80001b8:	ddf8      	ble.n	80001ac <main+0x2c>
		led_on();
 80001ba:	e7e6      	b.n	800018a <main+0xa>
 80001bc:	000f4235 	.word	0x000f4235

080001c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001c0:	480d      	ldr	r0, [pc, #52]	; (80001f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001c4:	e000      	b.n	80001c8 <Reset_Handler+0x8>
 80001c6:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001c8:	480c      	ldr	r0, [pc, #48]	; (80001fc <LoopForever+0x6>)
  ldr r1, =_edata
 80001ca:	490d      	ldr	r1, [pc, #52]	; (8000200 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001cc:	4a0d      	ldr	r2, [pc, #52]	; (8000204 <LoopForever+0xe>)
  movs r3, #0
 80001ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001d0:	e002      	b.n	80001d8 <LoopCopyDataInit>

080001d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001d6:	3304      	adds	r3, #4

080001d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001dc:	d3f9      	bcc.n	80001d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001de:	4a0a      	ldr	r2, [pc, #40]	; (8000208 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001e0:	4c0a      	ldr	r4, [pc, #40]	; (800020c <LoopForever+0x16>)
  movs r3, #0
 80001e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001e4:	e001      	b.n	80001ea <LoopFillZerobss>

080001e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001e8:	3204      	adds	r2, #4

080001ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001ec:	d3fb      	bcc.n	80001e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001ee:	f000 f811 	bl	8000214 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001f2:	f7ff ffc5 	bl	8000180 <main>

080001f6 <LoopForever>:

LoopForever:
  b LoopForever
 80001f6:	e7fe      	b.n	80001f6 <LoopForever>
  ldr   r0, =_estack
 80001f8:	20001800 	.word	0x20001800
  ldr r0, =_sdata
 80001fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000200:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000204:	0800027c 	.word	0x0800027c
  ldr r2, =_sbss
 8000208:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800020c:	2000001c 	.word	0x2000001c

08000210 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000210:	e7fe      	b.n	8000210 <ADC_IRQHandler>
	...

08000214 <__libc_init_array>:
 8000214:	b570      	push	{r4, r5, r6, lr}
 8000216:	2600      	movs	r6, #0
 8000218:	4d0c      	ldr	r5, [pc, #48]	; (800024c <__libc_init_array+0x38>)
 800021a:	4c0d      	ldr	r4, [pc, #52]	; (8000250 <__libc_init_array+0x3c>)
 800021c:	1b64      	subs	r4, r4, r5
 800021e:	10a4      	asrs	r4, r4, #2
 8000220:	42a6      	cmp	r6, r4
 8000222:	d109      	bne.n	8000238 <__libc_init_array+0x24>
 8000224:	2600      	movs	r6, #0
 8000226:	f000 f819 	bl	800025c <_init>
 800022a:	4d0a      	ldr	r5, [pc, #40]	; (8000254 <__libc_init_array+0x40>)
 800022c:	4c0a      	ldr	r4, [pc, #40]	; (8000258 <__libc_init_array+0x44>)
 800022e:	1b64      	subs	r4, r4, r5
 8000230:	10a4      	asrs	r4, r4, #2
 8000232:	42a6      	cmp	r6, r4
 8000234:	d105      	bne.n	8000242 <__libc_init_array+0x2e>
 8000236:	bd70      	pop	{r4, r5, r6, pc}
 8000238:	00b3      	lsls	r3, r6, #2
 800023a:	58eb      	ldr	r3, [r5, r3]
 800023c:	4798      	blx	r3
 800023e:	3601      	adds	r6, #1
 8000240:	e7ee      	b.n	8000220 <__libc_init_array+0xc>
 8000242:	00b3      	lsls	r3, r6, #2
 8000244:	58eb      	ldr	r3, [r5, r3]
 8000246:	4798      	blx	r3
 8000248:	3601      	adds	r6, #1
 800024a:	e7f2      	b.n	8000232 <__libc_init_array+0x1e>
 800024c:	08000274 	.word	0x08000274
 8000250:	08000274 	.word	0x08000274
 8000254:	08000274 	.word	0x08000274
 8000258:	08000278 	.word	0x08000278

0800025c <_init>:
 800025c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800025e:	46c0      	nop			; (mov r8, r8)
 8000260:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000262:	bc08      	pop	{r3}
 8000264:	469e      	mov	lr, r3
 8000266:	4770      	bx	lr

08000268 <_fini>:
 8000268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800026a:	46c0      	nop			; (mov r8, r8)
 800026c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800026e:	bc08      	pop	{r3}
 8000270:	469e      	mov	lr, r3
 8000272:	4770      	bx	lr
