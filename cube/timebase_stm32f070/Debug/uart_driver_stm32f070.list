
uart_driver_stm32f070.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001514  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  080015d4  080015d4  000115d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800168c  0800168c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800168c  0800168c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800168c  0800168c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800168c  0800168c  0001168c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001690  08001690  00011690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001694  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080016f8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080016f8  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000f85  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000568  00000000  00000000  00021011  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000178  00000000  00000000  00021580  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000120  00000000  00000000  000216f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000a898  00000000  00000000  00021818  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001d11  00000000  00000000  0002c0b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00033de5  00000000  00000000  0002ddc1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00061ba6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bf0  00000000  00000000  00061bf8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000064 	.word	0x20000064
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080015bc 	.word	0x080015bc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000068 	.word	0x20000068
 8000104:	080015bc 	.word	0x080015bc

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <led_init>:
#include "led.h"

#define GPIOA_EN (1 << 17)
#define LED_PIN (1 << 5);
void led_init(void){
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	RCC->AHBENR |= GPIOA_EN;
 8000238:	4b0d      	ldr	r3, [pc, #52]	; (8000270 <led_init+0x3c>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b0c      	ldr	r3, [pc, #48]	; (8000270 <led_init+0x3c>)
 800023e:	2180      	movs	r1, #128	; 0x80
 8000240:	0289      	lsls	r1, r1, #10
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
	GPIOA->MODER |= (1 << 10);
 8000246:	2390      	movs	r3, #144	; 0x90
 8000248:	05db      	lsls	r3, r3, #23
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	2390      	movs	r3, #144	; 0x90
 800024e:	05db      	lsls	r3, r3, #23
 8000250:	2180      	movs	r1, #128	; 0x80
 8000252:	00c9      	lsls	r1, r1, #3
 8000254:	430a      	orrs	r2, r1
 8000256:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1 << 11);
 8000258:	2390      	movs	r3, #144	; 0x90
 800025a:	05db      	lsls	r3, r3, #23
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	2390      	movs	r3, #144	; 0x90
 8000260:	05db      	lsls	r3, r3, #23
 8000262:	4904      	ldr	r1, [pc, #16]	; (8000274 <led_init+0x40>)
 8000264:	400a      	ands	r2, r1
 8000266:	601a      	str	r2, [r3, #0]

}
 8000268:	46c0      	nop			; (mov r8, r8)
 800026a:	46bd      	mov	sp, r7
 800026c:	bd80      	pop	{r7, pc}
 800026e:	46c0      	nop			; (mov r8, r8)
 8000270:	40021000 	.word	0x40021000
 8000274:	fffff7ff 	.word	0xfffff7ff

08000278 <led_on>:

void led_on(void){
 8000278:	b580      	push	{r7, lr}
 800027a:	af00      	add	r7, sp, #0
	GPIOA->ODR |= LED_PIN;
 800027c:	2390      	movs	r3, #144	; 0x90
 800027e:	05db      	lsls	r3, r3, #23
 8000280:	695a      	ldr	r2, [r3, #20]
 8000282:	2390      	movs	r3, #144	; 0x90
 8000284:	05db      	lsls	r3, r3, #23
 8000286:	2120      	movs	r1, #32
 8000288:	430a      	orrs	r2, r1
 800028a:	615a      	str	r2, [r3, #20]
}
 800028c:	46c0      	nop			; (mov r8, r8)
 800028e:	46bd      	mov	sp, r7
 8000290:	bd80      	pop	{r7, pc}

08000292 <led_off>:

void led_off(void){
 8000292:	b580      	push	{r7, lr}
 8000294:	af00      	add	r7, sp, #0
	GPIOA->ODR &= ~LED_PIN;
 8000296:	2390      	movs	r3, #144	; 0x90
 8000298:	05db      	lsls	r3, r3, #23
 800029a:	695a      	ldr	r2, [r3, #20]
 800029c:	2390      	movs	r3, #144	; 0x90
 800029e:	05db      	lsls	r3, r3, #23
 80002a0:	2120      	movs	r1, #32
 80002a2:	438a      	bics	r2, r1
 80002a4:	615a      	str	r2, [r3, #20]
}
 80002a6:	46c0      	nop			; (mov r8, r8)
 80002a8:	46bd      	mov	sp, r7
 80002aa:	bd80      	pop	{r7, pc}

080002ac <main>:
#include "led.h"
#include "uart.h"

int main(){
 80002ac:	b580      	push	{r7, lr}
 80002ae:	b082      	sub	sp, #8
 80002b0:	af00      	add	r7, sp, #0
	led_init();
 80002b2:	f7ff ffbf 	bl	8000234 <led_init>
	uart2_init();
 80002b6:	f000 f8cb 	bl	8000450 <uart2_init>
	while(1){
		led_on();
 80002ba:	f7ff ffdd 	bl	8000278 <led_on>
		for (int i=0; i<999990; i++);
 80002be:	2300      	movs	r3, #0
 80002c0:	607b      	str	r3, [r7, #4]
 80002c2:	e002      	b.n	80002ca <main+0x1e>
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	3301      	adds	r3, #1
 80002c8:	607b      	str	r3, [r7, #4]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a09      	ldr	r2, [pc, #36]	; (80002f4 <main+0x48>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	ddf8      	ble.n	80002c4 <main+0x18>
		led_off();
 80002d2:	f7ff ffde 	bl	8000292 <led_off>
		for (int i=0; i<999990; i++);
 80002d6:	2300      	movs	r3, #0
 80002d8:	603b      	str	r3, [r7, #0]
 80002da:	e002      	b.n	80002e2 <main+0x36>
 80002dc:	683b      	ldr	r3, [r7, #0]
 80002de:	3301      	adds	r3, #1
 80002e0:	603b      	str	r3, [r7, #0]
 80002e2:	683b      	ldr	r3, [r7, #0]
 80002e4:	4a03      	ldr	r2, [pc, #12]	; (80002f4 <main+0x48>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	ddf8      	ble.n	80002dc <main+0x30>
		printf("hellow from stm32070 wohooo \n\r");
 80002ea:	4b03      	ldr	r3, [pc, #12]	; (80002f8 <main+0x4c>)
 80002ec:	0018      	movs	r0, r3
 80002ee:	f000 f98d 	bl	800060c <iprintf>
	while(1){
 80002f2:	e7e2      	b.n	80002ba <main+0xe>
 80002f4:	000f4235 	.word	0x000f4235
 80002f8:	080015d4 	.word	0x080015d4

080002fc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b086      	sub	sp, #24
 8000300:	af00      	add	r7, sp, #0
 8000302:	60f8      	str	r0, [r7, #12]
 8000304:	60b9      	str	r1, [r7, #8]
 8000306:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000308:	2300      	movs	r3, #0
 800030a:	617b      	str	r3, [r7, #20]
 800030c:	e00a      	b.n	8000324 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800030e:	e000      	b.n	8000312 <_read+0x16>
 8000310:	bf00      	nop
 8000312:	0001      	movs	r1, r0
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	1c5a      	adds	r2, r3, #1
 8000318:	60ba      	str	r2, [r7, #8]
 800031a:	b2ca      	uxtb	r2, r1
 800031c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	3301      	adds	r3, #1
 8000322:	617b      	str	r3, [r7, #20]
 8000324:	697a      	ldr	r2, [r7, #20]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	429a      	cmp	r2, r3
 800032a:	dbf0      	blt.n	800030e <_read+0x12>
  }

  return len;
 800032c:	687b      	ldr	r3, [r7, #4]
}
 800032e:	0018      	movs	r0, r3
 8000330:	46bd      	mov	sp, r7
 8000332:	b006      	add	sp, #24
 8000334:	bd80      	pop	{r7, pc}

08000336 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000336:	b580      	push	{r7, lr}
 8000338:	b086      	sub	sp, #24
 800033a:	af00      	add	r7, sp, #0
 800033c:	60f8      	str	r0, [r7, #12]
 800033e:	60b9      	str	r1, [r7, #8]
 8000340:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000342:	2300      	movs	r3, #0
 8000344:	617b      	str	r3, [r7, #20]
 8000346:	e009      	b.n	800035c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000348:	68bb      	ldr	r3, [r7, #8]
 800034a:	1c5a      	adds	r2, r3, #1
 800034c:	60ba      	str	r2, [r7, #8]
 800034e:	781b      	ldrb	r3, [r3, #0]
 8000350:	0018      	movs	r0, r3
 8000352:	f000 f86f 	bl	8000434 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000356:	697b      	ldr	r3, [r7, #20]
 8000358:	3301      	adds	r3, #1
 800035a:	617b      	str	r3, [r7, #20]
 800035c:	697a      	ldr	r2, [r7, #20]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	429a      	cmp	r2, r3
 8000362:	dbf1      	blt.n	8000348 <_write+0x12>
  }
  return len;
 8000364:	687b      	ldr	r3, [r7, #4]
}
 8000366:	0018      	movs	r0, r3
 8000368:	46bd      	mov	sp, r7
 800036a:	b006      	add	sp, #24
 800036c:	bd80      	pop	{r7, pc}

0800036e <_close>:

int _close(int file)
{
 800036e:	b580      	push	{r7, lr}
 8000370:	b082      	sub	sp, #8
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000376:	2301      	movs	r3, #1
 8000378:	425b      	negs	r3, r3
}
 800037a:	0018      	movs	r0, r3
 800037c:	46bd      	mov	sp, r7
 800037e:	b002      	add	sp, #8
 8000380:	bd80      	pop	{r7, pc}

08000382 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000382:	b580      	push	{r7, lr}
 8000384:	b082      	sub	sp, #8
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
 800038a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800038c:	683b      	ldr	r3, [r7, #0]
 800038e:	2280      	movs	r2, #128	; 0x80
 8000390:	0192      	lsls	r2, r2, #6
 8000392:	605a      	str	r2, [r3, #4]
  return 0;
 8000394:	2300      	movs	r3, #0
}
 8000396:	0018      	movs	r0, r3
 8000398:	46bd      	mov	sp, r7
 800039a:	b002      	add	sp, #8
 800039c:	bd80      	pop	{r7, pc}

0800039e <_isatty>:

int _isatty(int file)
{
 800039e:	b580      	push	{r7, lr}
 80003a0:	b082      	sub	sp, #8
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003a6:	2301      	movs	r3, #1
}
 80003a8:	0018      	movs	r0, r3
 80003aa:	46bd      	mov	sp, r7
 80003ac:	b002      	add	sp, #8
 80003ae:	bd80      	pop	{r7, pc}

080003b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b084      	sub	sp, #16
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	60f8      	str	r0, [r7, #12]
 80003b8:	60b9      	str	r1, [r7, #8]
 80003ba:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003bc:	2300      	movs	r3, #0
}
 80003be:	0018      	movs	r0, r3
 80003c0:	46bd      	mov	sp, r7
 80003c2:	b004      	add	sp, #16
 80003c4:	bd80      	pop	{r7, pc}
	...

080003c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b086      	sub	sp, #24
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d0:	4a14      	ldr	r2, [pc, #80]	; (8000424 <_sbrk+0x5c>)
 80003d2:	4b15      	ldr	r3, [pc, #84]	; (8000428 <_sbrk+0x60>)
 80003d4:	1ad3      	subs	r3, r2, r3
 80003d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003d8:	697b      	ldr	r3, [r7, #20]
 80003da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003dc:	4b13      	ldr	r3, [pc, #76]	; (800042c <_sbrk+0x64>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	2b00      	cmp	r3, #0
 80003e2:	d102      	bne.n	80003ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e4:	4b11      	ldr	r3, [pc, #68]	; (800042c <_sbrk+0x64>)
 80003e6:	4a12      	ldr	r2, [pc, #72]	; (8000430 <_sbrk+0x68>)
 80003e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ea:	4b10      	ldr	r3, [pc, #64]	; (800042c <_sbrk+0x64>)
 80003ec:	681a      	ldr	r2, [r3, #0]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	18d3      	adds	r3, r2, r3
 80003f2:	693a      	ldr	r2, [r7, #16]
 80003f4:	429a      	cmp	r2, r3
 80003f6:	d207      	bcs.n	8000408 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003f8:	f000 f8d6 	bl	80005a8 <__errno>
 80003fc:	0003      	movs	r3, r0
 80003fe:	220c      	movs	r2, #12
 8000400:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000402:	2301      	movs	r3, #1
 8000404:	425b      	negs	r3, r3
 8000406:	e009      	b.n	800041c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000408:	4b08      	ldr	r3, [pc, #32]	; (800042c <_sbrk+0x64>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800040e:	4b07      	ldr	r3, [pc, #28]	; (800042c <_sbrk+0x64>)
 8000410:	681a      	ldr	r2, [r3, #0]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	18d2      	adds	r2, r2, r3
 8000416:	4b05      	ldr	r3, [pc, #20]	; (800042c <_sbrk+0x64>)
 8000418:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800041a:	68fb      	ldr	r3, [r7, #12]
}
 800041c:	0018      	movs	r0, r3
 800041e:	46bd      	mov	sp, r7
 8000420:	b006      	add	sp, #24
 8000422:	bd80      	pop	{r7, pc}
 8000424:	20001800 	.word	0x20001800
 8000428:	00000400 	.word	0x00000400
 800042c:	20000080 	.word	0x20000080
 8000430:	20000098 	.word	0x20000098

08000434 <__io_putchar>:
#define BAUD_RATE 115200

void compute_and_set_baud_rate(uint32_t peripheral_clk, uint32_t baudrate);

int __io_putchar(int ch)
{
 8000434:	b580      	push	{r7, lr}
 8000436:	b082      	sub	sp, #8
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]
	uart2_send(ch);
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	b25b      	sxtb	r3, r3
 8000440:	0018      	movs	r0, r3
 8000442:	f000 f84f 	bl	80004e4 <uart2_send>
	return ch;
 8000446:	687b      	ldr	r3, [r7, #4]
}
 8000448:	0018      	movs	r0, r3
 800044a:	46bd      	mov	sp, r7
 800044c:	b002      	add	sp, #8
 800044e:	bd80      	pop	{r7, pc}

08000450 <uart2_init>:

void uart2_init(void){
 8000450:	b580      	push	{r7, lr}
 8000452:	af00      	add	r7, sp, #0
	// enable clock access to gpio A
	RCC->AHBENR |= GPIOA_EN;
 8000454:	4b1f      	ldr	r3, [pc, #124]	; (80004d4 <uart2_init+0x84>)
 8000456:	695a      	ldr	r2, [r3, #20]
 8000458:	4b1e      	ldr	r3, [pc, #120]	; (80004d4 <uart2_init+0x84>)
 800045a:	2180      	movs	r1, #128	; 0x80
 800045c:	0289      	lsls	r1, r1, #10
 800045e:	430a      	orrs	r2, r1
 8000460:	615a      	str	r2, [r3, #20]

	// set PA2, PA3 mode to Alternate function
	GPIOA->MODER |= (GPIOA -> MODER | (1 << 5)) & ~(1 << 4);
 8000462:	2390      	movs	r3, #144	; 0x90
 8000464:	05db      	lsls	r3, r3, #23
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	2230      	movs	r2, #48	; 0x30
 800046a:	4393      	bics	r3, r2
 800046c:	2220      	movs	r2, #32
 800046e:	431a      	orrs	r2, r3
 8000470:	0011      	movs	r1, r2
 8000472:	2390      	movs	r3, #144	; 0x90
 8000474:	05db      	lsls	r3, r3, #23
 8000476:	681a      	ldr	r2, [r3, #0]
 8000478:	2390      	movs	r3, #144	; 0x90
 800047a:	05db      	lsls	r3, r3, #23
 800047c:	430a      	orrs	r2, r1
 800047e:	601a      	str	r2, [r3, #0]

	// set alternate function type AFSEL2[3:0] = AF1(0001), AFSEL3[3:0] = AF1(0001),	which is UART
	GPIOA->AFR[0] |= (GPIOA->AFR[0] | (1 << 4) | (1 << 8)) & ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 9) | (1 << 10) | (1 << 11));
 8000480:	2390      	movs	r3, #144	; 0x90
 8000482:	05db      	lsls	r3, r3, #23
 8000484:	6a1b      	ldr	r3, [r3, #32]
 8000486:	4a14      	ldr	r2, [pc, #80]	; (80004d8 <uart2_init+0x88>)
 8000488:	4013      	ands	r3, r2
 800048a:	2288      	movs	r2, #136	; 0x88
 800048c:	0052      	lsls	r2, r2, #1
 800048e:	431a      	orrs	r2, r3
 8000490:	0011      	movs	r1, r2
 8000492:	2390      	movs	r3, #144	; 0x90
 8000494:	05db      	lsls	r3, r3, #23
 8000496:	6a1a      	ldr	r2, [r3, #32]
 8000498:	2390      	movs	r3, #144	; 0x90
 800049a:	05db      	lsls	r3, r3, #23
 800049c:	430a      	orrs	r2, r1
 800049e:	621a      	str	r2, [r3, #32]

	// enable clock access to UART 2
	RCC->APB1ENR |= (1U << 17);
 80004a0:	4b0c      	ldr	r3, [pc, #48]	; (80004d4 <uart2_init+0x84>)
 80004a2:	69da      	ldr	r2, [r3, #28]
 80004a4:	4b0b      	ldr	r3, [pc, #44]	; (80004d4 <uart2_init+0x84>)
 80004a6:	2180      	movs	r1, #128	; 0x80
 80004a8:	0289      	lsls	r1, r1, #10
 80004aa:	430a      	orrs	r2, r1
 80004ac:	61da      	str	r2, [r3, #28]

	// configure the buad rate
	compute_and_set_baud_rate(APB_CLK, BAUD_RATE);
 80004ae:	23e1      	movs	r3, #225	; 0xe1
 80004b0:	025b      	lsls	r3, r3, #9
 80004b2:	4a0a      	ldr	r2, [pc, #40]	; (80004dc <uart2_init+0x8c>)
 80004b4:	0019      	movs	r1, r3
 80004b6:	0010      	movs	r0, r2
 80004b8:	f000 f836 	bl	8000528 <compute_and_set_baud_rate>

	// set the transfer direction
	USART2->CR1 = CR1_TRANS_EN;
 80004bc:	4b08      	ldr	r3, [pc, #32]	; (80004e0 <uart2_init+0x90>)
 80004be:	2208      	movs	r2, #8
 80004c0:	601a      	str	r2, [r3, #0]

	// enable UART module
	USART2->CR1 |= CR1_UART_EN;
 80004c2:	4b07      	ldr	r3, [pc, #28]	; (80004e0 <uart2_init+0x90>)
 80004c4:	681a      	ldr	r2, [r3, #0]
 80004c6:	4b06      	ldr	r3, [pc, #24]	; (80004e0 <uart2_init+0x90>)
 80004c8:	2101      	movs	r1, #1
 80004ca:	430a      	orrs	r2, r1
 80004cc:	601a      	str	r2, [r3, #0]
}
 80004ce:	46c0      	nop			; (mov r8, r8)
 80004d0:	46bd      	mov	sp, r7
 80004d2:	bd80      	pop	{r7, pc}
 80004d4:	40021000 	.word	0x40021000
 80004d8:	fffff00f 	.word	0xfffff00f
 80004dc:	007a1200 	.word	0x007a1200
 80004e0:	40004400 	.word	0x40004400

080004e4 <uart2_send>:

void uart2_send(int8_t data){
 80004e4:	b580      	push	{r7, lr}
 80004e6:	b082      	sub	sp, #8
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	0002      	movs	r2, r0
 80004ec:	1dfb      	adds	r3, r7, #7
 80004ee:	701a      	strb	r2, [r3, #0]
	// make sure the transmitter data register is empty
	while(!(USART2->ISR & TXE));
 80004f0:	46c0      	nop			; (mov r8, r8)
 80004f2:	4b0c      	ldr	r3, [pc, #48]	; (8000524 <uart2_send+0x40>)
 80004f4:	69db      	ldr	r3, [r3, #28]
 80004f6:	2280      	movs	r2, #128	; 0x80
 80004f8:	4013      	ands	r3, r2
 80004fa:	d0fa      	beq.n	80004f2 <uart2_send+0xe>

	// transmit the data
	USART2->TDR |= (data & 0xFF);
 80004fc:	4b09      	ldr	r3, [pc, #36]	; (8000524 <uart2_send+0x40>)
 80004fe:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8000500:	b29b      	uxth	r3, r3
 8000502:	b21a      	sxth	r2, r3
 8000504:	1dfb      	adds	r3, r7, #7
 8000506:	781b      	ldrb	r3, [r3, #0]
 8000508:	b25b      	sxtb	r3, r3
 800050a:	b21b      	sxth	r3, r3
 800050c:	21ff      	movs	r1, #255	; 0xff
 800050e:	400b      	ands	r3, r1
 8000510:	b21b      	sxth	r3, r3
 8000512:	4313      	orrs	r3, r2
 8000514:	b21a      	sxth	r2, r3
 8000516:	4b03      	ldr	r3, [pc, #12]	; (8000524 <uart2_send+0x40>)
 8000518:	b292      	uxth	r2, r2
 800051a:	851a      	strh	r2, [r3, #40]	; 0x28


}
 800051c:	46c0      	nop			; (mov r8, r8)
 800051e:	46bd      	mov	sp, r7
 8000520:	b002      	add	sp, #8
 8000522:	bd80      	pop	{r7, pc}
 8000524:	40004400 	.word	0x40004400

08000528 <compute_and_set_baud_rate>:

void compute_and_set_baud_rate(uint32_t peripheral_clk, uint32_t baudrate){
 8000528:	b590      	push	{r4, r7, lr}
 800052a:	b083      	sub	sp, #12
 800052c:	af00      	add	r7, sp, #0
 800052e:	6078      	str	r0, [r7, #4]
 8000530:	6039      	str	r1, [r7, #0]
	USART2->BRR = (peripheral_clk + (baudrate / 2U)) / baudrate;
 8000532:	683b      	ldr	r3, [r7, #0]
 8000534:	085a      	lsrs	r2, r3, #1
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	18d3      	adds	r3, r2, r3
 800053a:	4c05      	ldr	r4, [pc, #20]	; (8000550 <compute_and_set_baud_rate+0x28>)
 800053c:	6839      	ldr	r1, [r7, #0]
 800053e:	0018      	movs	r0, r3
 8000540:	f7ff fdec 	bl	800011c <__udivsi3>
 8000544:	0003      	movs	r3, r0
 8000546:	60e3      	str	r3, [r4, #12]
}
 8000548:	46c0      	nop			; (mov r8, r8)
 800054a:	46bd      	mov	sp, r7
 800054c:	b003      	add	sp, #12
 800054e:	bd90      	pop	{r4, r7, pc}
 8000550:	40004400 	.word	0x40004400

08000554 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000554:	480d      	ldr	r0, [pc, #52]	; (800058c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000556:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000558:	e000      	b.n	800055c <Reset_Handler+0x8>
 800055a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800055c:	480c      	ldr	r0, [pc, #48]	; (8000590 <LoopForever+0x6>)
  ldr r1, =_edata
 800055e:	490d      	ldr	r1, [pc, #52]	; (8000594 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000560:	4a0d      	ldr	r2, [pc, #52]	; (8000598 <LoopForever+0xe>)
  movs r3, #0
 8000562:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000564:	e002      	b.n	800056c <LoopCopyDataInit>

08000566 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000566:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000568:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800056a:	3304      	adds	r3, #4

0800056c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800056c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800056e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000570:	d3f9      	bcc.n	8000566 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000572:	4a0a      	ldr	r2, [pc, #40]	; (800059c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000574:	4c0a      	ldr	r4, [pc, #40]	; (80005a0 <LoopForever+0x16>)
  movs r3, #0
 8000576:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000578:	e001      	b.n	800057e <LoopFillZerobss>

0800057a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800057a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800057c:	3204      	adds	r2, #4

0800057e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800057e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000580:	d3fb      	bcc.n	800057a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000582:	f000 f817 	bl	80005b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000586:	f7ff fe91 	bl	80002ac <main>

0800058a <LoopForever>:

LoopForever:
  b LoopForever
 800058a:	e7fe      	b.n	800058a <LoopForever>
  ldr   r0, =_estack
 800058c:	20001800 	.word	0x20001800
  ldr r0, =_sdata
 8000590:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000594:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000598:	08001694 	.word	0x08001694
  ldr r2, =_sbss
 800059c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005a0:	20000094 	.word	0x20000094

080005a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005a4:	e7fe      	b.n	80005a4 <ADC_IRQHandler>
	...

080005a8 <__errno>:
 80005a8:	4b01      	ldr	r3, [pc, #4]	; (80005b0 <__errno+0x8>)
 80005aa:	6818      	ldr	r0, [r3, #0]
 80005ac:	4770      	bx	lr
 80005ae:	46c0      	nop			; (mov r8, r8)
 80005b0:	20000000 	.word	0x20000000

080005b4 <__libc_init_array>:
 80005b4:	b570      	push	{r4, r5, r6, lr}
 80005b6:	2600      	movs	r6, #0
 80005b8:	4d0c      	ldr	r5, [pc, #48]	; (80005ec <__libc_init_array+0x38>)
 80005ba:	4c0d      	ldr	r4, [pc, #52]	; (80005f0 <__libc_init_array+0x3c>)
 80005bc:	1b64      	subs	r4, r4, r5
 80005be:	10a4      	asrs	r4, r4, #2
 80005c0:	42a6      	cmp	r6, r4
 80005c2:	d109      	bne.n	80005d8 <__libc_init_array+0x24>
 80005c4:	2600      	movs	r6, #0
 80005c6:	f000 fff9 	bl	80015bc <_init>
 80005ca:	4d0a      	ldr	r5, [pc, #40]	; (80005f4 <__libc_init_array+0x40>)
 80005cc:	4c0a      	ldr	r4, [pc, #40]	; (80005f8 <__libc_init_array+0x44>)
 80005ce:	1b64      	subs	r4, r4, r5
 80005d0:	10a4      	asrs	r4, r4, #2
 80005d2:	42a6      	cmp	r6, r4
 80005d4:	d105      	bne.n	80005e2 <__libc_init_array+0x2e>
 80005d6:	bd70      	pop	{r4, r5, r6, pc}
 80005d8:	00b3      	lsls	r3, r6, #2
 80005da:	58eb      	ldr	r3, [r5, r3]
 80005dc:	4798      	blx	r3
 80005de:	3601      	adds	r6, #1
 80005e0:	e7ee      	b.n	80005c0 <__libc_init_array+0xc>
 80005e2:	00b3      	lsls	r3, r6, #2
 80005e4:	58eb      	ldr	r3, [r5, r3]
 80005e6:	4798      	blx	r3
 80005e8:	3601      	adds	r6, #1
 80005ea:	e7f2      	b.n	80005d2 <__libc_init_array+0x1e>
 80005ec:	0800168c 	.word	0x0800168c
 80005f0:	0800168c 	.word	0x0800168c
 80005f4:	0800168c 	.word	0x0800168c
 80005f8:	08001690 	.word	0x08001690

080005fc <memset>:
 80005fc:	0003      	movs	r3, r0
 80005fe:	1882      	adds	r2, r0, r2
 8000600:	4293      	cmp	r3, r2
 8000602:	d100      	bne.n	8000606 <memset+0xa>
 8000604:	4770      	bx	lr
 8000606:	7019      	strb	r1, [r3, #0]
 8000608:	3301      	adds	r3, #1
 800060a:	e7f9      	b.n	8000600 <memset+0x4>

0800060c <iprintf>:
 800060c:	b40f      	push	{r0, r1, r2, r3}
 800060e:	4b0b      	ldr	r3, [pc, #44]	; (800063c <iprintf+0x30>)
 8000610:	b513      	push	{r0, r1, r4, lr}
 8000612:	681c      	ldr	r4, [r3, #0]
 8000614:	2c00      	cmp	r4, #0
 8000616:	d005      	beq.n	8000624 <iprintf+0x18>
 8000618:	69a3      	ldr	r3, [r4, #24]
 800061a:	2b00      	cmp	r3, #0
 800061c:	d102      	bne.n	8000624 <iprintf+0x18>
 800061e:	0020      	movs	r0, r4
 8000620:	f000 f870 	bl	8000704 <__sinit>
 8000624:	ab05      	add	r3, sp, #20
 8000626:	0020      	movs	r0, r4
 8000628:	9a04      	ldr	r2, [sp, #16]
 800062a:	68a1      	ldr	r1, [r4, #8]
 800062c:	9301      	str	r3, [sp, #4]
 800062e:	f000 f9cd 	bl	80009cc <_vfiprintf_r>
 8000632:	bc16      	pop	{r1, r2, r4}
 8000634:	bc08      	pop	{r3}
 8000636:	b004      	add	sp, #16
 8000638:	4718      	bx	r3
 800063a:	46c0      	nop			; (mov r8, r8)
 800063c:	20000000 	.word	0x20000000

08000640 <std>:
 8000640:	2300      	movs	r3, #0
 8000642:	b510      	push	{r4, lr}
 8000644:	0004      	movs	r4, r0
 8000646:	6003      	str	r3, [r0, #0]
 8000648:	6043      	str	r3, [r0, #4]
 800064a:	6083      	str	r3, [r0, #8]
 800064c:	8181      	strh	r1, [r0, #12]
 800064e:	6643      	str	r3, [r0, #100]	; 0x64
 8000650:	0019      	movs	r1, r3
 8000652:	81c2      	strh	r2, [r0, #14]
 8000654:	6103      	str	r3, [r0, #16]
 8000656:	6143      	str	r3, [r0, #20]
 8000658:	6183      	str	r3, [r0, #24]
 800065a:	2208      	movs	r2, #8
 800065c:	305c      	adds	r0, #92	; 0x5c
 800065e:	f7ff ffcd 	bl	80005fc <memset>
 8000662:	4b05      	ldr	r3, [pc, #20]	; (8000678 <std+0x38>)
 8000664:	6224      	str	r4, [r4, #32]
 8000666:	6263      	str	r3, [r4, #36]	; 0x24
 8000668:	4b04      	ldr	r3, [pc, #16]	; (800067c <std+0x3c>)
 800066a:	62a3      	str	r3, [r4, #40]	; 0x28
 800066c:	4b04      	ldr	r3, [pc, #16]	; (8000680 <std+0x40>)
 800066e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000670:	4b04      	ldr	r3, [pc, #16]	; (8000684 <std+0x44>)
 8000672:	6323      	str	r3, [r4, #48]	; 0x30
 8000674:	bd10      	pop	{r4, pc}
 8000676:	46c0      	nop			; (mov r8, r8)
 8000678:	08000f69 	.word	0x08000f69
 800067c:	08000f91 	.word	0x08000f91
 8000680:	08000fc9 	.word	0x08000fc9
 8000684:	08000ff5 	.word	0x08000ff5

08000688 <_cleanup_r>:
 8000688:	b510      	push	{r4, lr}
 800068a:	4902      	ldr	r1, [pc, #8]	; (8000694 <_cleanup_r+0xc>)
 800068c:	f000 f8ba 	bl	8000804 <_fwalk_reent>
 8000690:	bd10      	pop	{r4, pc}
 8000692:	46c0      	nop			; (mov r8, r8)
 8000694:	08001301 	.word	0x08001301

08000698 <__sfmoreglue>:
 8000698:	b570      	push	{r4, r5, r6, lr}
 800069a:	2568      	movs	r5, #104	; 0x68
 800069c:	1e4a      	subs	r2, r1, #1
 800069e:	4355      	muls	r5, r2
 80006a0:	000e      	movs	r6, r1
 80006a2:	0029      	movs	r1, r5
 80006a4:	3174      	adds	r1, #116	; 0x74
 80006a6:	f000 f8f3 	bl	8000890 <_malloc_r>
 80006aa:	1e04      	subs	r4, r0, #0
 80006ac:	d008      	beq.n	80006c0 <__sfmoreglue+0x28>
 80006ae:	2100      	movs	r1, #0
 80006b0:	002a      	movs	r2, r5
 80006b2:	6001      	str	r1, [r0, #0]
 80006b4:	6046      	str	r6, [r0, #4]
 80006b6:	300c      	adds	r0, #12
 80006b8:	60a0      	str	r0, [r4, #8]
 80006ba:	3268      	adds	r2, #104	; 0x68
 80006bc:	f7ff ff9e 	bl	80005fc <memset>
 80006c0:	0020      	movs	r0, r4
 80006c2:	bd70      	pop	{r4, r5, r6, pc}

080006c4 <__sfp_lock_acquire>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	4802      	ldr	r0, [pc, #8]	; (80006d0 <__sfp_lock_acquire+0xc>)
 80006c8:	f000 f8bd 	bl	8000846 <__retarget_lock_acquire_recursive>
 80006cc:	bd10      	pop	{r4, pc}
 80006ce:	46c0      	nop			; (mov r8, r8)
 80006d0:	20000085 	.word	0x20000085

080006d4 <__sfp_lock_release>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	4802      	ldr	r0, [pc, #8]	; (80006e0 <__sfp_lock_release+0xc>)
 80006d8:	f000 f8b6 	bl	8000848 <__retarget_lock_release_recursive>
 80006dc:	bd10      	pop	{r4, pc}
 80006de:	46c0      	nop			; (mov r8, r8)
 80006e0:	20000085 	.word	0x20000085

080006e4 <__sinit_lock_acquire>:
 80006e4:	b510      	push	{r4, lr}
 80006e6:	4802      	ldr	r0, [pc, #8]	; (80006f0 <__sinit_lock_acquire+0xc>)
 80006e8:	f000 f8ad 	bl	8000846 <__retarget_lock_acquire_recursive>
 80006ec:	bd10      	pop	{r4, pc}
 80006ee:	46c0      	nop			; (mov r8, r8)
 80006f0:	20000086 	.word	0x20000086

080006f4 <__sinit_lock_release>:
 80006f4:	b510      	push	{r4, lr}
 80006f6:	4802      	ldr	r0, [pc, #8]	; (8000700 <__sinit_lock_release+0xc>)
 80006f8:	f000 f8a6 	bl	8000848 <__retarget_lock_release_recursive>
 80006fc:	bd10      	pop	{r4, pc}
 80006fe:	46c0      	nop			; (mov r8, r8)
 8000700:	20000086 	.word	0x20000086

08000704 <__sinit>:
 8000704:	b513      	push	{r0, r1, r4, lr}
 8000706:	0004      	movs	r4, r0
 8000708:	f7ff ffec 	bl	80006e4 <__sinit_lock_acquire>
 800070c:	69a3      	ldr	r3, [r4, #24]
 800070e:	2b00      	cmp	r3, #0
 8000710:	d002      	beq.n	8000718 <__sinit+0x14>
 8000712:	f7ff ffef 	bl	80006f4 <__sinit_lock_release>
 8000716:	bd13      	pop	{r0, r1, r4, pc}
 8000718:	64a3      	str	r3, [r4, #72]	; 0x48
 800071a:	64e3      	str	r3, [r4, #76]	; 0x4c
 800071c:	6523      	str	r3, [r4, #80]	; 0x50
 800071e:	4b13      	ldr	r3, [pc, #76]	; (800076c <__sinit+0x68>)
 8000720:	4a13      	ldr	r2, [pc, #76]	; (8000770 <__sinit+0x6c>)
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	62a2      	str	r2, [r4, #40]	; 0x28
 8000726:	9301      	str	r3, [sp, #4]
 8000728:	42a3      	cmp	r3, r4
 800072a:	d101      	bne.n	8000730 <__sinit+0x2c>
 800072c:	2301      	movs	r3, #1
 800072e:	61a3      	str	r3, [r4, #24]
 8000730:	0020      	movs	r0, r4
 8000732:	f000 f81f 	bl	8000774 <__sfp>
 8000736:	6060      	str	r0, [r4, #4]
 8000738:	0020      	movs	r0, r4
 800073a:	f000 f81b 	bl	8000774 <__sfp>
 800073e:	60a0      	str	r0, [r4, #8]
 8000740:	0020      	movs	r0, r4
 8000742:	f000 f817 	bl	8000774 <__sfp>
 8000746:	2200      	movs	r2, #0
 8000748:	2104      	movs	r1, #4
 800074a:	60e0      	str	r0, [r4, #12]
 800074c:	6860      	ldr	r0, [r4, #4]
 800074e:	f7ff ff77 	bl	8000640 <std>
 8000752:	2201      	movs	r2, #1
 8000754:	2109      	movs	r1, #9
 8000756:	68a0      	ldr	r0, [r4, #8]
 8000758:	f7ff ff72 	bl	8000640 <std>
 800075c:	2202      	movs	r2, #2
 800075e:	2112      	movs	r1, #18
 8000760:	68e0      	ldr	r0, [r4, #12]
 8000762:	f7ff ff6d 	bl	8000640 <std>
 8000766:	2301      	movs	r3, #1
 8000768:	61a3      	str	r3, [r4, #24]
 800076a:	e7d2      	b.n	8000712 <__sinit+0xe>
 800076c:	080015f4 	.word	0x080015f4
 8000770:	08000689 	.word	0x08000689

08000774 <__sfp>:
 8000774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000776:	0007      	movs	r7, r0
 8000778:	f7ff ffa4 	bl	80006c4 <__sfp_lock_acquire>
 800077c:	4b1f      	ldr	r3, [pc, #124]	; (80007fc <__sfp+0x88>)
 800077e:	681e      	ldr	r6, [r3, #0]
 8000780:	69b3      	ldr	r3, [r6, #24]
 8000782:	2b00      	cmp	r3, #0
 8000784:	d102      	bne.n	800078c <__sfp+0x18>
 8000786:	0030      	movs	r0, r6
 8000788:	f7ff ffbc 	bl	8000704 <__sinit>
 800078c:	3648      	adds	r6, #72	; 0x48
 800078e:	68b4      	ldr	r4, [r6, #8]
 8000790:	6873      	ldr	r3, [r6, #4]
 8000792:	3b01      	subs	r3, #1
 8000794:	d504      	bpl.n	80007a0 <__sfp+0x2c>
 8000796:	6833      	ldr	r3, [r6, #0]
 8000798:	2b00      	cmp	r3, #0
 800079a:	d022      	beq.n	80007e2 <__sfp+0x6e>
 800079c:	6836      	ldr	r6, [r6, #0]
 800079e:	e7f6      	b.n	800078e <__sfp+0x1a>
 80007a0:	220c      	movs	r2, #12
 80007a2:	5ea5      	ldrsh	r5, [r4, r2]
 80007a4:	2d00      	cmp	r5, #0
 80007a6:	d11a      	bne.n	80007de <__sfp+0x6a>
 80007a8:	0020      	movs	r0, r4
 80007aa:	4b15      	ldr	r3, [pc, #84]	; (8000800 <__sfp+0x8c>)
 80007ac:	3058      	adds	r0, #88	; 0x58
 80007ae:	60e3      	str	r3, [r4, #12]
 80007b0:	6665      	str	r5, [r4, #100]	; 0x64
 80007b2:	f000 f847 	bl	8000844 <__retarget_lock_init_recursive>
 80007b6:	f7ff ff8d 	bl	80006d4 <__sfp_lock_release>
 80007ba:	0020      	movs	r0, r4
 80007bc:	2208      	movs	r2, #8
 80007be:	0029      	movs	r1, r5
 80007c0:	6025      	str	r5, [r4, #0]
 80007c2:	60a5      	str	r5, [r4, #8]
 80007c4:	6065      	str	r5, [r4, #4]
 80007c6:	6125      	str	r5, [r4, #16]
 80007c8:	6165      	str	r5, [r4, #20]
 80007ca:	61a5      	str	r5, [r4, #24]
 80007cc:	305c      	adds	r0, #92	; 0x5c
 80007ce:	f7ff ff15 	bl	80005fc <memset>
 80007d2:	6365      	str	r5, [r4, #52]	; 0x34
 80007d4:	63a5      	str	r5, [r4, #56]	; 0x38
 80007d6:	64a5      	str	r5, [r4, #72]	; 0x48
 80007d8:	64e5      	str	r5, [r4, #76]	; 0x4c
 80007da:	0020      	movs	r0, r4
 80007dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007de:	3468      	adds	r4, #104	; 0x68
 80007e0:	e7d7      	b.n	8000792 <__sfp+0x1e>
 80007e2:	2104      	movs	r1, #4
 80007e4:	0038      	movs	r0, r7
 80007e6:	f7ff ff57 	bl	8000698 <__sfmoreglue>
 80007ea:	1e04      	subs	r4, r0, #0
 80007ec:	6030      	str	r0, [r6, #0]
 80007ee:	d1d5      	bne.n	800079c <__sfp+0x28>
 80007f0:	f7ff ff70 	bl	80006d4 <__sfp_lock_release>
 80007f4:	230c      	movs	r3, #12
 80007f6:	603b      	str	r3, [r7, #0]
 80007f8:	e7ef      	b.n	80007da <__sfp+0x66>
 80007fa:	46c0      	nop			; (mov r8, r8)
 80007fc:	080015f4 	.word	0x080015f4
 8000800:	ffff0001 	.word	0xffff0001

08000804 <_fwalk_reent>:
 8000804:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000806:	0004      	movs	r4, r0
 8000808:	0006      	movs	r6, r0
 800080a:	2700      	movs	r7, #0
 800080c:	9101      	str	r1, [sp, #4]
 800080e:	3448      	adds	r4, #72	; 0x48
 8000810:	6863      	ldr	r3, [r4, #4]
 8000812:	68a5      	ldr	r5, [r4, #8]
 8000814:	9300      	str	r3, [sp, #0]
 8000816:	9b00      	ldr	r3, [sp, #0]
 8000818:	3b01      	subs	r3, #1
 800081a:	9300      	str	r3, [sp, #0]
 800081c:	d504      	bpl.n	8000828 <_fwalk_reent+0x24>
 800081e:	6824      	ldr	r4, [r4, #0]
 8000820:	2c00      	cmp	r4, #0
 8000822:	d1f5      	bne.n	8000810 <_fwalk_reent+0xc>
 8000824:	0038      	movs	r0, r7
 8000826:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000828:	89ab      	ldrh	r3, [r5, #12]
 800082a:	2b01      	cmp	r3, #1
 800082c:	d908      	bls.n	8000840 <_fwalk_reent+0x3c>
 800082e:	220e      	movs	r2, #14
 8000830:	5eab      	ldrsh	r3, [r5, r2]
 8000832:	3301      	adds	r3, #1
 8000834:	d004      	beq.n	8000840 <_fwalk_reent+0x3c>
 8000836:	0029      	movs	r1, r5
 8000838:	0030      	movs	r0, r6
 800083a:	9b01      	ldr	r3, [sp, #4]
 800083c:	4798      	blx	r3
 800083e:	4307      	orrs	r7, r0
 8000840:	3568      	adds	r5, #104	; 0x68
 8000842:	e7e8      	b.n	8000816 <_fwalk_reent+0x12>

08000844 <__retarget_lock_init_recursive>:
 8000844:	4770      	bx	lr

08000846 <__retarget_lock_acquire_recursive>:
 8000846:	4770      	bx	lr

08000848 <__retarget_lock_release_recursive>:
 8000848:	4770      	bx	lr
	...

0800084c <sbrk_aligned>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	4e0f      	ldr	r6, [pc, #60]	; (800088c <sbrk_aligned+0x40>)
 8000850:	000d      	movs	r5, r1
 8000852:	6831      	ldr	r1, [r6, #0]
 8000854:	0004      	movs	r4, r0
 8000856:	2900      	cmp	r1, #0
 8000858:	d102      	bne.n	8000860 <sbrk_aligned+0x14>
 800085a:	f000 fb73 	bl	8000f44 <_sbrk_r>
 800085e:	6030      	str	r0, [r6, #0]
 8000860:	0029      	movs	r1, r5
 8000862:	0020      	movs	r0, r4
 8000864:	f000 fb6e 	bl	8000f44 <_sbrk_r>
 8000868:	1c43      	adds	r3, r0, #1
 800086a:	d00a      	beq.n	8000882 <sbrk_aligned+0x36>
 800086c:	2303      	movs	r3, #3
 800086e:	1cc5      	adds	r5, r0, #3
 8000870:	439d      	bics	r5, r3
 8000872:	42a8      	cmp	r0, r5
 8000874:	d007      	beq.n	8000886 <sbrk_aligned+0x3a>
 8000876:	1a29      	subs	r1, r5, r0
 8000878:	0020      	movs	r0, r4
 800087a:	f000 fb63 	bl	8000f44 <_sbrk_r>
 800087e:	1c43      	adds	r3, r0, #1
 8000880:	d101      	bne.n	8000886 <sbrk_aligned+0x3a>
 8000882:	2501      	movs	r5, #1
 8000884:	426d      	negs	r5, r5
 8000886:	0028      	movs	r0, r5
 8000888:	bd70      	pop	{r4, r5, r6, pc}
 800088a:	46c0      	nop			; (mov r8, r8)
 800088c:	2000008c 	.word	0x2000008c

08000890 <_malloc_r>:
 8000890:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000892:	2203      	movs	r2, #3
 8000894:	1ccb      	adds	r3, r1, #3
 8000896:	4393      	bics	r3, r2
 8000898:	3308      	adds	r3, #8
 800089a:	0006      	movs	r6, r0
 800089c:	001f      	movs	r7, r3
 800089e:	2b0c      	cmp	r3, #12
 80008a0:	d232      	bcs.n	8000908 <_malloc_r+0x78>
 80008a2:	270c      	movs	r7, #12
 80008a4:	42b9      	cmp	r1, r7
 80008a6:	d831      	bhi.n	800090c <_malloc_r+0x7c>
 80008a8:	0030      	movs	r0, r6
 80008aa:	f000 fdf5 	bl	8001498 <__malloc_lock>
 80008ae:	4d32      	ldr	r5, [pc, #200]	; (8000978 <_malloc_r+0xe8>)
 80008b0:	682b      	ldr	r3, [r5, #0]
 80008b2:	001c      	movs	r4, r3
 80008b4:	2c00      	cmp	r4, #0
 80008b6:	d12e      	bne.n	8000916 <_malloc_r+0x86>
 80008b8:	0039      	movs	r1, r7
 80008ba:	0030      	movs	r0, r6
 80008bc:	f7ff ffc6 	bl	800084c <sbrk_aligned>
 80008c0:	0004      	movs	r4, r0
 80008c2:	1c43      	adds	r3, r0, #1
 80008c4:	d11e      	bne.n	8000904 <_malloc_r+0x74>
 80008c6:	682c      	ldr	r4, [r5, #0]
 80008c8:	0025      	movs	r5, r4
 80008ca:	2d00      	cmp	r5, #0
 80008cc:	d14a      	bne.n	8000964 <_malloc_r+0xd4>
 80008ce:	6823      	ldr	r3, [r4, #0]
 80008d0:	0029      	movs	r1, r5
 80008d2:	18e3      	adds	r3, r4, r3
 80008d4:	0030      	movs	r0, r6
 80008d6:	9301      	str	r3, [sp, #4]
 80008d8:	f000 fb34 	bl	8000f44 <_sbrk_r>
 80008dc:	9b01      	ldr	r3, [sp, #4]
 80008de:	4283      	cmp	r3, r0
 80008e0:	d143      	bne.n	800096a <_malloc_r+0xda>
 80008e2:	6823      	ldr	r3, [r4, #0]
 80008e4:	3703      	adds	r7, #3
 80008e6:	1aff      	subs	r7, r7, r3
 80008e8:	2303      	movs	r3, #3
 80008ea:	439f      	bics	r7, r3
 80008ec:	3708      	adds	r7, #8
 80008ee:	2f0c      	cmp	r7, #12
 80008f0:	d200      	bcs.n	80008f4 <_malloc_r+0x64>
 80008f2:	270c      	movs	r7, #12
 80008f4:	0039      	movs	r1, r7
 80008f6:	0030      	movs	r0, r6
 80008f8:	f7ff ffa8 	bl	800084c <sbrk_aligned>
 80008fc:	1c43      	adds	r3, r0, #1
 80008fe:	d034      	beq.n	800096a <_malloc_r+0xda>
 8000900:	6823      	ldr	r3, [r4, #0]
 8000902:	19df      	adds	r7, r3, r7
 8000904:	6027      	str	r7, [r4, #0]
 8000906:	e013      	b.n	8000930 <_malloc_r+0xa0>
 8000908:	2b00      	cmp	r3, #0
 800090a:	dacb      	bge.n	80008a4 <_malloc_r+0x14>
 800090c:	230c      	movs	r3, #12
 800090e:	2500      	movs	r5, #0
 8000910:	6033      	str	r3, [r6, #0]
 8000912:	0028      	movs	r0, r5
 8000914:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000916:	6822      	ldr	r2, [r4, #0]
 8000918:	1bd1      	subs	r1, r2, r7
 800091a:	d420      	bmi.n	800095e <_malloc_r+0xce>
 800091c:	290b      	cmp	r1, #11
 800091e:	d917      	bls.n	8000950 <_malloc_r+0xc0>
 8000920:	19e2      	adds	r2, r4, r7
 8000922:	6027      	str	r7, [r4, #0]
 8000924:	42a3      	cmp	r3, r4
 8000926:	d111      	bne.n	800094c <_malloc_r+0xbc>
 8000928:	602a      	str	r2, [r5, #0]
 800092a:	6863      	ldr	r3, [r4, #4]
 800092c:	6011      	str	r1, [r2, #0]
 800092e:	6053      	str	r3, [r2, #4]
 8000930:	0030      	movs	r0, r6
 8000932:	0025      	movs	r5, r4
 8000934:	f000 fdb8 	bl	80014a8 <__malloc_unlock>
 8000938:	2207      	movs	r2, #7
 800093a:	350b      	adds	r5, #11
 800093c:	1d23      	adds	r3, r4, #4
 800093e:	4395      	bics	r5, r2
 8000940:	1aea      	subs	r2, r5, r3
 8000942:	429d      	cmp	r5, r3
 8000944:	d0e5      	beq.n	8000912 <_malloc_r+0x82>
 8000946:	1b5b      	subs	r3, r3, r5
 8000948:	50a3      	str	r3, [r4, r2]
 800094a:	e7e2      	b.n	8000912 <_malloc_r+0x82>
 800094c:	605a      	str	r2, [r3, #4]
 800094e:	e7ec      	b.n	800092a <_malloc_r+0x9a>
 8000950:	6862      	ldr	r2, [r4, #4]
 8000952:	42a3      	cmp	r3, r4
 8000954:	d101      	bne.n	800095a <_malloc_r+0xca>
 8000956:	602a      	str	r2, [r5, #0]
 8000958:	e7ea      	b.n	8000930 <_malloc_r+0xa0>
 800095a:	605a      	str	r2, [r3, #4]
 800095c:	e7e8      	b.n	8000930 <_malloc_r+0xa0>
 800095e:	0023      	movs	r3, r4
 8000960:	6864      	ldr	r4, [r4, #4]
 8000962:	e7a7      	b.n	80008b4 <_malloc_r+0x24>
 8000964:	002c      	movs	r4, r5
 8000966:	686d      	ldr	r5, [r5, #4]
 8000968:	e7af      	b.n	80008ca <_malloc_r+0x3a>
 800096a:	230c      	movs	r3, #12
 800096c:	0030      	movs	r0, r6
 800096e:	6033      	str	r3, [r6, #0]
 8000970:	f000 fd9a 	bl	80014a8 <__malloc_unlock>
 8000974:	e7cd      	b.n	8000912 <_malloc_r+0x82>
 8000976:	46c0      	nop			; (mov r8, r8)
 8000978:	20000088 	.word	0x20000088

0800097c <__sfputc_r>:
 800097c:	6893      	ldr	r3, [r2, #8]
 800097e:	b510      	push	{r4, lr}
 8000980:	3b01      	subs	r3, #1
 8000982:	6093      	str	r3, [r2, #8]
 8000984:	2b00      	cmp	r3, #0
 8000986:	da04      	bge.n	8000992 <__sfputc_r+0x16>
 8000988:	6994      	ldr	r4, [r2, #24]
 800098a:	42a3      	cmp	r3, r4
 800098c:	db07      	blt.n	800099e <__sfputc_r+0x22>
 800098e:	290a      	cmp	r1, #10
 8000990:	d005      	beq.n	800099e <__sfputc_r+0x22>
 8000992:	6813      	ldr	r3, [r2, #0]
 8000994:	1c58      	adds	r0, r3, #1
 8000996:	6010      	str	r0, [r2, #0]
 8000998:	7019      	strb	r1, [r3, #0]
 800099a:	0008      	movs	r0, r1
 800099c:	bd10      	pop	{r4, pc}
 800099e:	f000 fb2f 	bl	8001000 <__swbuf_r>
 80009a2:	0001      	movs	r1, r0
 80009a4:	e7f9      	b.n	800099a <__sfputc_r+0x1e>

080009a6 <__sfputs_r>:
 80009a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a8:	0006      	movs	r6, r0
 80009aa:	000f      	movs	r7, r1
 80009ac:	0014      	movs	r4, r2
 80009ae:	18d5      	adds	r5, r2, r3
 80009b0:	42ac      	cmp	r4, r5
 80009b2:	d101      	bne.n	80009b8 <__sfputs_r+0x12>
 80009b4:	2000      	movs	r0, #0
 80009b6:	e007      	b.n	80009c8 <__sfputs_r+0x22>
 80009b8:	7821      	ldrb	r1, [r4, #0]
 80009ba:	003a      	movs	r2, r7
 80009bc:	0030      	movs	r0, r6
 80009be:	f7ff ffdd 	bl	800097c <__sfputc_r>
 80009c2:	3401      	adds	r4, #1
 80009c4:	1c43      	adds	r3, r0, #1
 80009c6:	d1f3      	bne.n	80009b0 <__sfputs_r+0xa>
 80009c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009cc <_vfiprintf_r>:
 80009cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009ce:	b0a1      	sub	sp, #132	; 0x84
 80009d0:	0006      	movs	r6, r0
 80009d2:	000c      	movs	r4, r1
 80009d4:	001f      	movs	r7, r3
 80009d6:	9203      	str	r2, [sp, #12]
 80009d8:	2800      	cmp	r0, #0
 80009da:	d004      	beq.n	80009e6 <_vfiprintf_r+0x1a>
 80009dc:	6983      	ldr	r3, [r0, #24]
 80009de:	2b00      	cmp	r3, #0
 80009e0:	d101      	bne.n	80009e6 <_vfiprintf_r+0x1a>
 80009e2:	f7ff fe8f 	bl	8000704 <__sinit>
 80009e6:	4b8e      	ldr	r3, [pc, #568]	; (8000c20 <_vfiprintf_r+0x254>)
 80009e8:	429c      	cmp	r4, r3
 80009ea:	d11c      	bne.n	8000a26 <_vfiprintf_r+0x5a>
 80009ec:	6874      	ldr	r4, [r6, #4]
 80009ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009f0:	07db      	lsls	r3, r3, #31
 80009f2:	d405      	bmi.n	8000a00 <_vfiprintf_r+0x34>
 80009f4:	89a3      	ldrh	r3, [r4, #12]
 80009f6:	059b      	lsls	r3, r3, #22
 80009f8:	d402      	bmi.n	8000a00 <_vfiprintf_r+0x34>
 80009fa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009fc:	f7ff ff23 	bl	8000846 <__retarget_lock_acquire_recursive>
 8000a00:	89a3      	ldrh	r3, [r4, #12]
 8000a02:	071b      	lsls	r3, r3, #28
 8000a04:	d502      	bpl.n	8000a0c <_vfiprintf_r+0x40>
 8000a06:	6923      	ldr	r3, [r4, #16]
 8000a08:	2b00      	cmp	r3, #0
 8000a0a:	d11d      	bne.n	8000a48 <_vfiprintf_r+0x7c>
 8000a0c:	0021      	movs	r1, r4
 8000a0e:	0030      	movs	r0, r6
 8000a10:	f000 fb60 	bl	80010d4 <__swsetup_r>
 8000a14:	2800      	cmp	r0, #0
 8000a16:	d017      	beq.n	8000a48 <_vfiprintf_r+0x7c>
 8000a18:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000a1a:	07db      	lsls	r3, r3, #31
 8000a1c:	d50d      	bpl.n	8000a3a <_vfiprintf_r+0x6e>
 8000a1e:	2001      	movs	r0, #1
 8000a20:	4240      	negs	r0, r0
 8000a22:	b021      	add	sp, #132	; 0x84
 8000a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a26:	4b7f      	ldr	r3, [pc, #508]	; (8000c24 <_vfiprintf_r+0x258>)
 8000a28:	429c      	cmp	r4, r3
 8000a2a:	d101      	bne.n	8000a30 <_vfiprintf_r+0x64>
 8000a2c:	68b4      	ldr	r4, [r6, #8]
 8000a2e:	e7de      	b.n	80009ee <_vfiprintf_r+0x22>
 8000a30:	4b7d      	ldr	r3, [pc, #500]	; (8000c28 <_vfiprintf_r+0x25c>)
 8000a32:	429c      	cmp	r4, r3
 8000a34:	d1db      	bne.n	80009ee <_vfiprintf_r+0x22>
 8000a36:	68f4      	ldr	r4, [r6, #12]
 8000a38:	e7d9      	b.n	80009ee <_vfiprintf_r+0x22>
 8000a3a:	89a3      	ldrh	r3, [r4, #12]
 8000a3c:	059b      	lsls	r3, r3, #22
 8000a3e:	d4ee      	bmi.n	8000a1e <_vfiprintf_r+0x52>
 8000a40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a42:	f7ff ff01 	bl	8000848 <__retarget_lock_release_recursive>
 8000a46:	e7ea      	b.n	8000a1e <_vfiprintf_r+0x52>
 8000a48:	2300      	movs	r3, #0
 8000a4a:	ad08      	add	r5, sp, #32
 8000a4c:	616b      	str	r3, [r5, #20]
 8000a4e:	3320      	adds	r3, #32
 8000a50:	766b      	strb	r3, [r5, #25]
 8000a52:	3310      	adds	r3, #16
 8000a54:	76ab      	strb	r3, [r5, #26]
 8000a56:	9707      	str	r7, [sp, #28]
 8000a58:	9f03      	ldr	r7, [sp, #12]
 8000a5a:	783b      	ldrb	r3, [r7, #0]
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	d001      	beq.n	8000a64 <_vfiprintf_r+0x98>
 8000a60:	2b25      	cmp	r3, #37	; 0x25
 8000a62:	d14e      	bne.n	8000b02 <_vfiprintf_r+0x136>
 8000a64:	9b03      	ldr	r3, [sp, #12]
 8000a66:	1afb      	subs	r3, r7, r3
 8000a68:	9305      	str	r3, [sp, #20]
 8000a6a:	9b03      	ldr	r3, [sp, #12]
 8000a6c:	429f      	cmp	r7, r3
 8000a6e:	d00d      	beq.n	8000a8c <_vfiprintf_r+0xc0>
 8000a70:	9b05      	ldr	r3, [sp, #20]
 8000a72:	0021      	movs	r1, r4
 8000a74:	0030      	movs	r0, r6
 8000a76:	9a03      	ldr	r2, [sp, #12]
 8000a78:	f7ff ff95 	bl	80009a6 <__sfputs_r>
 8000a7c:	1c43      	adds	r3, r0, #1
 8000a7e:	d100      	bne.n	8000a82 <_vfiprintf_r+0xb6>
 8000a80:	e0b5      	b.n	8000bee <_vfiprintf_r+0x222>
 8000a82:	696a      	ldr	r2, [r5, #20]
 8000a84:	9b05      	ldr	r3, [sp, #20]
 8000a86:	4694      	mov	ip, r2
 8000a88:	4463      	add	r3, ip
 8000a8a:	616b      	str	r3, [r5, #20]
 8000a8c:	783b      	ldrb	r3, [r7, #0]
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d100      	bne.n	8000a94 <_vfiprintf_r+0xc8>
 8000a92:	e0ac      	b.n	8000bee <_vfiprintf_r+0x222>
 8000a94:	2201      	movs	r2, #1
 8000a96:	1c7b      	adds	r3, r7, #1
 8000a98:	9303      	str	r3, [sp, #12]
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	4252      	negs	r2, r2
 8000a9e:	606a      	str	r2, [r5, #4]
 8000aa0:	a904      	add	r1, sp, #16
 8000aa2:	3254      	adds	r2, #84	; 0x54
 8000aa4:	1852      	adds	r2, r2, r1
 8000aa6:	602b      	str	r3, [r5, #0]
 8000aa8:	60eb      	str	r3, [r5, #12]
 8000aaa:	60ab      	str	r3, [r5, #8]
 8000aac:	7013      	strb	r3, [r2, #0]
 8000aae:	65ab      	str	r3, [r5, #88]	; 0x58
 8000ab0:	9b03      	ldr	r3, [sp, #12]
 8000ab2:	2205      	movs	r2, #5
 8000ab4:	7819      	ldrb	r1, [r3, #0]
 8000ab6:	485d      	ldr	r0, [pc, #372]	; (8000c2c <_vfiprintf_r+0x260>)
 8000ab8:	f000 fce2 	bl	8001480 <memchr>
 8000abc:	9b03      	ldr	r3, [sp, #12]
 8000abe:	1c5f      	adds	r7, r3, #1
 8000ac0:	2800      	cmp	r0, #0
 8000ac2:	d120      	bne.n	8000b06 <_vfiprintf_r+0x13a>
 8000ac4:	682a      	ldr	r2, [r5, #0]
 8000ac6:	06d3      	lsls	r3, r2, #27
 8000ac8:	d504      	bpl.n	8000ad4 <_vfiprintf_r+0x108>
 8000aca:	2353      	movs	r3, #83	; 0x53
 8000acc:	a904      	add	r1, sp, #16
 8000ace:	185b      	adds	r3, r3, r1
 8000ad0:	2120      	movs	r1, #32
 8000ad2:	7019      	strb	r1, [r3, #0]
 8000ad4:	0713      	lsls	r3, r2, #28
 8000ad6:	d504      	bpl.n	8000ae2 <_vfiprintf_r+0x116>
 8000ad8:	2353      	movs	r3, #83	; 0x53
 8000ada:	a904      	add	r1, sp, #16
 8000adc:	185b      	adds	r3, r3, r1
 8000ade:	212b      	movs	r1, #43	; 0x2b
 8000ae0:	7019      	strb	r1, [r3, #0]
 8000ae2:	9b03      	ldr	r3, [sp, #12]
 8000ae4:	781b      	ldrb	r3, [r3, #0]
 8000ae6:	2b2a      	cmp	r3, #42	; 0x2a
 8000ae8:	d016      	beq.n	8000b18 <_vfiprintf_r+0x14c>
 8000aea:	2100      	movs	r1, #0
 8000aec:	68eb      	ldr	r3, [r5, #12]
 8000aee:	9f03      	ldr	r7, [sp, #12]
 8000af0:	783a      	ldrb	r2, [r7, #0]
 8000af2:	1c78      	adds	r0, r7, #1
 8000af4:	3a30      	subs	r2, #48	; 0x30
 8000af6:	4684      	mov	ip, r0
 8000af8:	2a09      	cmp	r2, #9
 8000afa:	d94f      	bls.n	8000b9c <_vfiprintf_r+0x1d0>
 8000afc:	2900      	cmp	r1, #0
 8000afe:	d111      	bne.n	8000b24 <_vfiprintf_r+0x158>
 8000b00:	e017      	b.n	8000b32 <_vfiprintf_r+0x166>
 8000b02:	3701      	adds	r7, #1
 8000b04:	e7a9      	b.n	8000a5a <_vfiprintf_r+0x8e>
 8000b06:	4b49      	ldr	r3, [pc, #292]	; (8000c2c <_vfiprintf_r+0x260>)
 8000b08:	682a      	ldr	r2, [r5, #0]
 8000b0a:	1ac0      	subs	r0, r0, r3
 8000b0c:	2301      	movs	r3, #1
 8000b0e:	4083      	lsls	r3, r0
 8000b10:	4313      	orrs	r3, r2
 8000b12:	602b      	str	r3, [r5, #0]
 8000b14:	9703      	str	r7, [sp, #12]
 8000b16:	e7cb      	b.n	8000ab0 <_vfiprintf_r+0xe4>
 8000b18:	9b07      	ldr	r3, [sp, #28]
 8000b1a:	1d19      	adds	r1, r3, #4
 8000b1c:	681b      	ldr	r3, [r3, #0]
 8000b1e:	9107      	str	r1, [sp, #28]
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	db01      	blt.n	8000b28 <_vfiprintf_r+0x15c>
 8000b24:	930b      	str	r3, [sp, #44]	; 0x2c
 8000b26:	e004      	b.n	8000b32 <_vfiprintf_r+0x166>
 8000b28:	425b      	negs	r3, r3
 8000b2a:	60eb      	str	r3, [r5, #12]
 8000b2c:	2302      	movs	r3, #2
 8000b2e:	4313      	orrs	r3, r2
 8000b30:	602b      	str	r3, [r5, #0]
 8000b32:	783b      	ldrb	r3, [r7, #0]
 8000b34:	2b2e      	cmp	r3, #46	; 0x2e
 8000b36:	d10a      	bne.n	8000b4e <_vfiprintf_r+0x182>
 8000b38:	787b      	ldrb	r3, [r7, #1]
 8000b3a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b3c:	d137      	bne.n	8000bae <_vfiprintf_r+0x1e2>
 8000b3e:	9b07      	ldr	r3, [sp, #28]
 8000b40:	3702      	adds	r7, #2
 8000b42:	1d1a      	adds	r2, r3, #4
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	9207      	str	r2, [sp, #28]
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	db2d      	blt.n	8000ba8 <_vfiprintf_r+0x1dc>
 8000b4c:	9309      	str	r3, [sp, #36]	; 0x24
 8000b4e:	2203      	movs	r2, #3
 8000b50:	7839      	ldrb	r1, [r7, #0]
 8000b52:	4837      	ldr	r0, [pc, #220]	; (8000c30 <_vfiprintf_r+0x264>)
 8000b54:	f000 fc94 	bl	8001480 <memchr>
 8000b58:	2800      	cmp	r0, #0
 8000b5a:	d007      	beq.n	8000b6c <_vfiprintf_r+0x1a0>
 8000b5c:	4b34      	ldr	r3, [pc, #208]	; (8000c30 <_vfiprintf_r+0x264>)
 8000b5e:	682a      	ldr	r2, [r5, #0]
 8000b60:	1ac0      	subs	r0, r0, r3
 8000b62:	2340      	movs	r3, #64	; 0x40
 8000b64:	4083      	lsls	r3, r0
 8000b66:	4313      	orrs	r3, r2
 8000b68:	3701      	adds	r7, #1
 8000b6a:	602b      	str	r3, [r5, #0]
 8000b6c:	7839      	ldrb	r1, [r7, #0]
 8000b6e:	1c7b      	adds	r3, r7, #1
 8000b70:	2206      	movs	r2, #6
 8000b72:	4830      	ldr	r0, [pc, #192]	; (8000c34 <_vfiprintf_r+0x268>)
 8000b74:	9303      	str	r3, [sp, #12]
 8000b76:	7629      	strb	r1, [r5, #24]
 8000b78:	f000 fc82 	bl	8001480 <memchr>
 8000b7c:	2800      	cmp	r0, #0
 8000b7e:	d045      	beq.n	8000c0c <_vfiprintf_r+0x240>
 8000b80:	4b2d      	ldr	r3, [pc, #180]	; (8000c38 <_vfiprintf_r+0x26c>)
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	d127      	bne.n	8000bd6 <_vfiprintf_r+0x20a>
 8000b86:	2207      	movs	r2, #7
 8000b88:	9b07      	ldr	r3, [sp, #28]
 8000b8a:	3307      	adds	r3, #7
 8000b8c:	4393      	bics	r3, r2
 8000b8e:	3308      	adds	r3, #8
 8000b90:	9307      	str	r3, [sp, #28]
 8000b92:	696b      	ldr	r3, [r5, #20]
 8000b94:	9a04      	ldr	r2, [sp, #16]
 8000b96:	189b      	adds	r3, r3, r2
 8000b98:	616b      	str	r3, [r5, #20]
 8000b9a:	e75d      	b.n	8000a58 <_vfiprintf_r+0x8c>
 8000b9c:	210a      	movs	r1, #10
 8000b9e:	434b      	muls	r3, r1
 8000ba0:	4667      	mov	r7, ip
 8000ba2:	189b      	adds	r3, r3, r2
 8000ba4:	3909      	subs	r1, #9
 8000ba6:	e7a3      	b.n	8000af0 <_vfiprintf_r+0x124>
 8000ba8:	2301      	movs	r3, #1
 8000baa:	425b      	negs	r3, r3
 8000bac:	e7ce      	b.n	8000b4c <_vfiprintf_r+0x180>
 8000bae:	2300      	movs	r3, #0
 8000bb0:	001a      	movs	r2, r3
 8000bb2:	3701      	adds	r7, #1
 8000bb4:	606b      	str	r3, [r5, #4]
 8000bb6:	7839      	ldrb	r1, [r7, #0]
 8000bb8:	1c78      	adds	r0, r7, #1
 8000bba:	3930      	subs	r1, #48	; 0x30
 8000bbc:	4684      	mov	ip, r0
 8000bbe:	2909      	cmp	r1, #9
 8000bc0:	d903      	bls.n	8000bca <_vfiprintf_r+0x1fe>
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d0c3      	beq.n	8000b4e <_vfiprintf_r+0x182>
 8000bc6:	9209      	str	r2, [sp, #36]	; 0x24
 8000bc8:	e7c1      	b.n	8000b4e <_vfiprintf_r+0x182>
 8000bca:	230a      	movs	r3, #10
 8000bcc:	435a      	muls	r2, r3
 8000bce:	4667      	mov	r7, ip
 8000bd0:	1852      	adds	r2, r2, r1
 8000bd2:	3b09      	subs	r3, #9
 8000bd4:	e7ef      	b.n	8000bb6 <_vfiprintf_r+0x1ea>
 8000bd6:	ab07      	add	r3, sp, #28
 8000bd8:	9300      	str	r3, [sp, #0]
 8000bda:	0022      	movs	r2, r4
 8000bdc:	0029      	movs	r1, r5
 8000bde:	0030      	movs	r0, r6
 8000be0:	4b16      	ldr	r3, [pc, #88]	; (8000c3c <_vfiprintf_r+0x270>)
 8000be2:	e000      	b.n	8000be6 <_vfiprintf_r+0x21a>
 8000be4:	bf00      	nop
 8000be6:	9004      	str	r0, [sp, #16]
 8000be8:	9b04      	ldr	r3, [sp, #16]
 8000bea:	3301      	adds	r3, #1
 8000bec:	d1d1      	bne.n	8000b92 <_vfiprintf_r+0x1c6>
 8000bee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bf0:	07db      	lsls	r3, r3, #31
 8000bf2:	d405      	bmi.n	8000c00 <_vfiprintf_r+0x234>
 8000bf4:	89a3      	ldrh	r3, [r4, #12]
 8000bf6:	059b      	lsls	r3, r3, #22
 8000bf8:	d402      	bmi.n	8000c00 <_vfiprintf_r+0x234>
 8000bfa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bfc:	f7ff fe24 	bl	8000848 <__retarget_lock_release_recursive>
 8000c00:	89a3      	ldrh	r3, [r4, #12]
 8000c02:	065b      	lsls	r3, r3, #25
 8000c04:	d500      	bpl.n	8000c08 <_vfiprintf_r+0x23c>
 8000c06:	e70a      	b.n	8000a1e <_vfiprintf_r+0x52>
 8000c08:	980d      	ldr	r0, [sp, #52]	; 0x34
 8000c0a:	e70a      	b.n	8000a22 <_vfiprintf_r+0x56>
 8000c0c:	ab07      	add	r3, sp, #28
 8000c0e:	9300      	str	r3, [sp, #0]
 8000c10:	0022      	movs	r2, r4
 8000c12:	0029      	movs	r1, r5
 8000c14:	0030      	movs	r0, r6
 8000c16:	4b09      	ldr	r3, [pc, #36]	; (8000c3c <_vfiprintf_r+0x270>)
 8000c18:	f000 f882 	bl	8000d20 <_printf_i>
 8000c1c:	e7e3      	b.n	8000be6 <_vfiprintf_r+0x21a>
 8000c1e:	46c0      	nop			; (mov r8, r8)
 8000c20:	08001618 	.word	0x08001618
 8000c24:	08001638 	.word	0x08001638
 8000c28:	080015f8 	.word	0x080015f8
 8000c2c:	08001658 	.word	0x08001658
 8000c30:	0800165e 	.word	0x0800165e
 8000c34:	08001662 	.word	0x08001662
 8000c38:	00000000 	.word	0x00000000
 8000c3c:	080009a7 	.word	0x080009a7

08000c40 <_printf_common>:
 8000c40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c42:	0015      	movs	r5, r2
 8000c44:	9301      	str	r3, [sp, #4]
 8000c46:	688a      	ldr	r2, [r1, #8]
 8000c48:	690b      	ldr	r3, [r1, #16]
 8000c4a:	000c      	movs	r4, r1
 8000c4c:	9000      	str	r0, [sp, #0]
 8000c4e:	4293      	cmp	r3, r2
 8000c50:	da00      	bge.n	8000c54 <_printf_common+0x14>
 8000c52:	0013      	movs	r3, r2
 8000c54:	0022      	movs	r2, r4
 8000c56:	602b      	str	r3, [r5, #0]
 8000c58:	3243      	adds	r2, #67	; 0x43
 8000c5a:	7812      	ldrb	r2, [r2, #0]
 8000c5c:	2a00      	cmp	r2, #0
 8000c5e:	d001      	beq.n	8000c64 <_printf_common+0x24>
 8000c60:	3301      	adds	r3, #1
 8000c62:	602b      	str	r3, [r5, #0]
 8000c64:	6823      	ldr	r3, [r4, #0]
 8000c66:	069b      	lsls	r3, r3, #26
 8000c68:	d502      	bpl.n	8000c70 <_printf_common+0x30>
 8000c6a:	682b      	ldr	r3, [r5, #0]
 8000c6c:	3302      	adds	r3, #2
 8000c6e:	602b      	str	r3, [r5, #0]
 8000c70:	6822      	ldr	r2, [r4, #0]
 8000c72:	2306      	movs	r3, #6
 8000c74:	0017      	movs	r7, r2
 8000c76:	401f      	ands	r7, r3
 8000c78:	421a      	tst	r2, r3
 8000c7a:	d027      	beq.n	8000ccc <_printf_common+0x8c>
 8000c7c:	0023      	movs	r3, r4
 8000c7e:	3343      	adds	r3, #67	; 0x43
 8000c80:	781b      	ldrb	r3, [r3, #0]
 8000c82:	1e5a      	subs	r2, r3, #1
 8000c84:	4193      	sbcs	r3, r2
 8000c86:	6822      	ldr	r2, [r4, #0]
 8000c88:	0692      	lsls	r2, r2, #26
 8000c8a:	d430      	bmi.n	8000cee <_printf_common+0xae>
 8000c8c:	0022      	movs	r2, r4
 8000c8e:	9901      	ldr	r1, [sp, #4]
 8000c90:	9800      	ldr	r0, [sp, #0]
 8000c92:	9e08      	ldr	r6, [sp, #32]
 8000c94:	3243      	adds	r2, #67	; 0x43
 8000c96:	47b0      	blx	r6
 8000c98:	1c43      	adds	r3, r0, #1
 8000c9a:	d025      	beq.n	8000ce8 <_printf_common+0xa8>
 8000c9c:	2306      	movs	r3, #6
 8000c9e:	6820      	ldr	r0, [r4, #0]
 8000ca0:	682a      	ldr	r2, [r5, #0]
 8000ca2:	68e1      	ldr	r1, [r4, #12]
 8000ca4:	2500      	movs	r5, #0
 8000ca6:	4003      	ands	r3, r0
 8000ca8:	2b04      	cmp	r3, #4
 8000caa:	d103      	bne.n	8000cb4 <_printf_common+0x74>
 8000cac:	1a8d      	subs	r5, r1, r2
 8000cae:	43eb      	mvns	r3, r5
 8000cb0:	17db      	asrs	r3, r3, #31
 8000cb2:	401d      	ands	r5, r3
 8000cb4:	68a3      	ldr	r3, [r4, #8]
 8000cb6:	6922      	ldr	r2, [r4, #16]
 8000cb8:	4293      	cmp	r3, r2
 8000cba:	dd01      	ble.n	8000cc0 <_printf_common+0x80>
 8000cbc:	1a9b      	subs	r3, r3, r2
 8000cbe:	18ed      	adds	r5, r5, r3
 8000cc0:	2700      	movs	r7, #0
 8000cc2:	42bd      	cmp	r5, r7
 8000cc4:	d120      	bne.n	8000d08 <_printf_common+0xc8>
 8000cc6:	2000      	movs	r0, #0
 8000cc8:	e010      	b.n	8000cec <_printf_common+0xac>
 8000cca:	3701      	adds	r7, #1
 8000ccc:	68e3      	ldr	r3, [r4, #12]
 8000cce:	682a      	ldr	r2, [r5, #0]
 8000cd0:	1a9b      	subs	r3, r3, r2
 8000cd2:	42bb      	cmp	r3, r7
 8000cd4:	ddd2      	ble.n	8000c7c <_printf_common+0x3c>
 8000cd6:	0022      	movs	r2, r4
 8000cd8:	2301      	movs	r3, #1
 8000cda:	9901      	ldr	r1, [sp, #4]
 8000cdc:	9800      	ldr	r0, [sp, #0]
 8000cde:	9e08      	ldr	r6, [sp, #32]
 8000ce0:	3219      	adds	r2, #25
 8000ce2:	47b0      	blx	r6
 8000ce4:	1c43      	adds	r3, r0, #1
 8000ce6:	d1f0      	bne.n	8000cca <_printf_common+0x8a>
 8000ce8:	2001      	movs	r0, #1
 8000cea:	4240      	negs	r0, r0
 8000cec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000cee:	2030      	movs	r0, #48	; 0x30
 8000cf0:	18e1      	adds	r1, r4, r3
 8000cf2:	3143      	adds	r1, #67	; 0x43
 8000cf4:	7008      	strb	r0, [r1, #0]
 8000cf6:	0021      	movs	r1, r4
 8000cf8:	1c5a      	adds	r2, r3, #1
 8000cfa:	3145      	adds	r1, #69	; 0x45
 8000cfc:	7809      	ldrb	r1, [r1, #0]
 8000cfe:	18a2      	adds	r2, r4, r2
 8000d00:	3243      	adds	r2, #67	; 0x43
 8000d02:	3302      	adds	r3, #2
 8000d04:	7011      	strb	r1, [r2, #0]
 8000d06:	e7c1      	b.n	8000c8c <_printf_common+0x4c>
 8000d08:	0022      	movs	r2, r4
 8000d0a:	2301      	movs	r3, #1
 8000d0c:	9901      	ldr	r1, [sp, #4]
 8000d0e:	9800      	ldr	r0, [sp, #0]
 8000d10:	9e08      	ldr	r6, [sp, #32]
 8000d12:	321a      	adds	r2, #26
 8000d14:	47b0      	blx	r6
 8000d16:	1c43      	adds	r3, r0, #1
 8000d18:	d0e6      	beq.n	8000ce8 <_printf_common+0xa8>
 8000d1a:	3701      	adds	r7, #1
 8000d1c:	e7d1      	b.n	8000cc2 <_printf_common+0x82>
	...

08000d20 <_printf_i>:
 8000d20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d22:	b08b      	sub	sp, #44	; 0x2c
 8000d24:	9206      	str	r2, [sp, #24]
 8000d26:	000a      	movs	r2, r1
 8000d28:	3243      	adds	r2, #67	; 0x43
 8000d2a:	9307      	str	r3, [sp, #28]
 8000d2c:	9005      	str	r0, [sp, #20]
 8000d2e:	9204      	str	r2, [sp, #16]
 8000d30:	7e0a      	ldrb	r2, [r1, #24]
 8000d32:	000c      	movs	r4, r1
 8000d34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8000d36:	2a78      	cmp	r2, #120	; 0x78
 8000d38:	d807      	bhi.n	8000d4a <_printf_i+0x2a>
 8000d3a:	2a62      	cmp	r2, #98	; 0x62
 8000d3c:	d809      	bhi.n	8000d52 <_printf_i+0x32>
 8000d3e:	2a00      	cmp	r2, #0
 8000d40:	d100      	bne.n	8000d44 <_printf_i+0x24>
 8000d42:	e0c1      	b.n	8000ec8 <_printf_i+0x1a8>
 8000d44:	2a58      	cmp	r2, #88	; 0x58
 8000d46:	d100      	bne.n	8000d4a <_printf_i+0x2a>
 8000d48:	e08c      	b.n	8000e64 <_printf_i+0x144>
 8000d4a:	0026      	movs	r6, r4
 8000d4c:	3642      	adds	r6, #66	; 0x42
 8000d4e:	7032      	strb	r2, [r6, #0]
 8000d50:	e022      	b.n	8000d98 <_printf_i+0x78>
 8000d52:	0010      	movs	r0, r2
 8000d54:	3863      	subs	r0, #99	; 0x63
 8000d56:	2815      	cmp	r0, #21
 8000d58:	d8f7      	bhi.n	8000d4a <_printf_i+0x2a>
 8000d5a:	f7ff f9d5 	bl	8000108 <__gnu_thumb1_case_shi>
 8000d5e:	0016      	.short	0x0016
 8000d60:	fff6001f 	.word	0xfff6001f
 8000d64:	fff6fff6 	.word	0xfff6fff6
 8000d68:	001ffff6 	.word	0x001ffff6
 8000d6c:	fff6fff6 	.word	0xfff6fff6
 8000d70:	fff6fff6 	.word	0xfff6fff6
 8000d74:	003600a8 	.word	0x003600a8
 8000d78:	fff6009a 	.word	0xfff6009a
 8000d7c:	00b9fff6 	.word	0x00b9fff6
 8000d80:	0036fff6 	.word	0x0036fff6
 8000d84:	fff6fff6 	.word	0xfff6fff6
 8000d88:	009e      	.short	0x009e
 8000d8a:	0026      	movs	r6, r4
 8000d8c:	681a      	ldr	r2, [r3, #0]
 8000d8e:	3642      	adds	r6, #66	; 0x42
 8000d90:	1d11      	adds	r1, r2, #4
 8000d92:	6019      	str	r1, [r3, #0]
 8000d94:	6813      	ldr	r3, [r2, #0]
 8000d96:	7033      	strb	r3, [r6, #0]
 8000d98:	2301      	movs	r3, #1
 8000d9a:	e0a7      	b.n	8000eec <_printf_i+0x1cc>
 8000d9c:	6808      	ldr	r0, [r1, #0]
 8000d9e:	6819      	ldr	r1, [r3, #0]
 8000da0:	1d0a      	adds	r2, r1, #4
 8000da2:	0605      	lsls	r5, r0, #24
 8000da4:	d50b      	bpl.n	8000dbe <_printf_i+0x9e>
 8000da6:	680d      	ldr	r5, [r1, #0]
 8000da8:	601a      	str	r2, [r3, #0]
 8000daa:	2d00      	cmp	r5, #0
 8000dac:	da03      	bge.n	8000db6 <_printf_i+0x96>
 8000dae:	232d      	movs	r3, #45	; 0x2d
 8000db0:	9a04      	ldr	r2, [sp, #16]
 8000db2:	426d      	negs	r5, r5
 8000db4:	7013      	strb	r3, [r2, #0]
 8000db6:	4b61      	ldr	r3, [pc, #388]	; (8000f3c <_printf_i+0x21c>)
 8000db8:	270a      	movs	r7, #10
 8000dba:	9303      	str	r3, [sp, #12]
 8000dbc:	e01b      	b.n	8000df6 <_printf_i+0xd6>
 8000dbe:	680d      	ldr	r5, [r1, #0]
 8000dc0:	601a      	str	r2, [r3, #0]
 8000dc2:	0641      	lsls	r1, r0, #25
 8000dc4:	d5f1      	bpl.n	8000daa <_printf_i+0x8a>
 8000dc6:	b22d      	sxth	r5, r5
 8000dc8:	e7ef      	b.n	8000daa <_printf_i+0x8a>
 8000dca:	680d      	ldr	r5, [r1, #0]
 8000dcc:	6819      	ldr	r1, [r3, #0]
 8000dce:	1d08      	adds	r0, r1, #4
 8000dd0:	6018      	str	r0, [r3, #0]
 8000dd2:	062e      	lsls	r6, r5, #24
 8000dd4:	d501      	bpl.n	8000dda <_printf_i+0xba>
 8000dd6:	680d      	ldr	r5, [r1, #0]
 8000dd8:	e003      	b.n	8000de2 <_printf_i+0xc2>
 8000dda:	066d      	lsls	r5, r5, #25
 8000ddc:	d5fb      	bpl.n	8000dd6 <_printf_i+0xb6>
 8000dde:	680d      	ldr	r5, [r1, #0]
 8000de0:	b2ad      	uxth	r5, r5
 8000de2:	4b56      	ldr	r3, [pc, #344]	; (8000f3c <_printf_i+0x21c>)
 8000de4:	2708      	movs	r7, #8
 8000de6:	9303      	str	r3, [sp, #12]
 8000de8:	2a6f      	cmp	r2, #111	; 0x6f
 8000dea:	d000      	beq.n	8000dee <_printf_i+0xce>
 8000dec:	3702      	adds	r7, #2
 8000dee:	0023      	movs	r3, r4
 8000df0:	2200      	movs	r2, #0
 8000df2:	3343      	adds	r3, #67	; 0x43
 8000df4:	701a      	strb	r2, [r3, #0]
 8000df6:	6863      	ldr	r3, [r4, #4]
 8000df8:	60a3      	str	r3, [r4, #8]
 8000dfa:	2b00      	cmp	r3, #0
 8000dfc:	db03      	blt.n	8000e06 <_printf_i+0xe6>
 8000dfe:	2204      	movs	r2, #4
 8000e00:	6821      	ldr	r1, [r4, #0]
 8000e02:	4391      	bics	r1, r2
 8000e04:	6021      	str	r1, [r4, #0]
 8000e06:	2d00      	cmp	r5, #0
 8000e08:	d102      	bne.n	8000e10 <_printf_i+0xf0>
 8000e0a:	9e04      	ldr	r6, [sp, #16]
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	d00c      	beq.n	8000e2a <_printf_i+0x10a>
 8000e10:	9e04      	ldr	r6, [sp, #16]
 8000e12:	0028      	movs	r0, r5
 8000e14:	0039      	movs	r1, r7
 8000e16:	f7ff fa07 	bl	8000228 <__aeabi_uidivmod>
 8000e1a:	9b03      	ldr	r3, [sp, #12]
 8000e1c:	3e01      	subs	r6, #1
 8000e1e:	5c5b      	ldrb	r3, [r3, r1]
 8000e20:	7033      	strb	r3, [r6, #0]
 8000e22:	002b      	movs	r3, r5
 8000e24:	0005      	movs	r5, r0
 8000e26:	429f      	cmp	r7, r3
 8000e28:	d9f3      	bls.n	8000e12 <_printf_i+0xf2>
 8000e2a:	2f08      	cmp	r7, #8
 8000e2c:	d109      	bne.n	8000e42 <_printf_i+0x122>
 8000e2e:	6823      	ldr	r3, [r4, #0]
 8000e30:	07db      	lsls	r3, r3, #31
 8000e32:	d506      	bpl.n	8000e42 <_printf_i+0x122>
 8000e34:	6863      	ldr	r3, [r4, #4]
 8000e36:	6922      	ldr	r2, [r4, #16]
 8000e38:	4293      	cmp	r3, r2
 8000e3a:	dc02      	bgt.n	8000e42 <_printf_i+0x122>
 8000e3c:	2330      	movs	r3, #48	; 0x30
 8000e3e:	3e01      	subs	r6, #1
 8000e40:	7033      	strb	r3, [r6, #0]
 8000e42:	9b04      	ldr	r3, [sp, #16]
 8000e44:	1b9b      	subs	r3, r3, r6
 8000e46:	6123      	str	r3, [r4, #16]
 8000e48:	9b07      	ldr	r3, [sp, #28]
 8000e4a:	0021      	movs	r1, r4
 8000e4c:	9300      	str	r3, [sp, #0]
 8000e4e:	9805      	ldr	r0, [sp, #20]
 8000e50:	9b06      	ldr	r3, [sp, #24]
 8000e52:	aa09      	add	r2, sp, #36	; 0x24
 8000e54:	f7ff fef4 	bl	8000c40 <_printf_common>
 8000e58:	1c43      	adds	r3, r0, #1
 8000e5a:	d14c      	bne.n	8000ef6 <_printf_i+0x1d6>
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4240      	negs	r0, r0
 8000e60:	b00b      	add	sp, #44	; 0x2c
 8000e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e64:	3145      	adds	r1, #69	; 0x45
 8000e66:	700a      	strb	r2, [r1, #0]
 8000e68:	4a34      	ldr	r2, [pc, #208]	; (8000f3c <_printf_i+0x21c>)
 8000e6a:	9203      	str	r2, [sp, #12]
 8000e6c:	681a      	ldr	r2, [r3, #0]
 8000e6e:	6821      	ldr	r1, [r4, #0]
 8000e70:	ca20      	ldmia	r2!, {r5}
 8000e72:	601a      	str	r2, [r3, #0]
 8000e74:	0608      	lsls	r0, r1, #24
 8000e76:	d516      	bpl.n	8000ea6 <_printf_i+0x186>
 8000e78:	07cb      	lsls	r3, r1, #31
 8000e7a:	d502      	bpl.n	8000e82 <_printf_i+0x162>
 8000e7c:	2320      	movs	r3, #32
 8000e7e:	4319      	orrs	r1, r3
 8000e80:	6021      	str	r1, [r4, #0]
 8000e82:	2710      	movs	r7, #16
 8000e84:	2d00      	cmp	r5, #0
 8000e86:	d1b2      	bne.n	8000dee <_printf_i+0xce>
 8000e88:	2320      	movs	r3, #32
 8000e8a:	6822      	ldr	r2, [r4, #0]
 8000e8c:	439a      	bics	r2, r3
 8000e8e:	6022      	str	r2, [r4, #0]
 8000e90:	e7ad      	b.n	8000dee <_printf_i+0xce>
 8000e92:	2220      	movs	r2, #32
 8000e94:	6809      	ldr	r1, [r1, #0]
 8000e96:	430a      	orrs	r2, r1
 8000e98:	6022      	str	r2, [r4, #0]
 8000e9a:	0022      	movs	r2, r4
 8000e9c:	2178      	movs	r1, #120	; 0x78
 8000e9e:	3245      	adds	r2, #69	; 0x45
 8000ea0:	7011      	strb	r1, [r2, #0]
 8000ea2:	4a27      	ldr	r2, [pc, #156]	; (8000f40 <_printf_i+0x220>)
 8000ea4:	e7e1      	b.n	8000e6a <_printf_i+0x14a>
 8000ea6:	0648      	lsls	r0, r1, #25
 8000ea8:	d5e6      	bpl.n	8000e78 <_printf_i+0x158>
 8000eaa:	b2ad      	uxth	r5, r5
 8000eac:	e7e4      	b.n	8000e78 <_printf_i+0x158>
 8000eae:	681a      	ldr	r2, [r3, #0]
 8000eb0:	680d      	ldr	r5, [r1, #0]
 8000eb2:	1d10      	adds	r0, r2, #4
 8000eb4:	6949      	ldr	r1, [r1, #20]
 8000eb6:	6018      	str	r0, [r3, #0]
 8000eb8:	6813      	ldr	r3, [r2, #0]
 8000eba:	062e      	lsls	r6, r5, #24
 8000ebc:	d501      	bpl.n	8000ec2 <_printf_i+0x1a2>
 8000ebe:	6019      	str	r1, [r3, #0]
 8000ec0:	e002      	b.n	8000ec8 <_printf_i+0x1a8>
 8000ec2:	066d      	lsls	r5, r5, #25
 8000ec4:	d5fb      	bpl.n	8000ebe <_printf_i+0x19e>
 8000ec6:	8019      	strh	r1, [r3, #0]
 8000ec8:	2300      	movs	r3, #0
 8000eca:	9e04      	ldr	r6, [sp, #16]
 8000ecc:	6123      	str	r3, [r4, #16]
 8000ece:	e7bb      	b.n	8000e48 <_printf_i+0x128>
 8000ed0:	681a      	ldr	r2, [r3, #0]
 8000ed2:	1d11      	adds	r1, r2, #4
 8000ed4:	6019      	str	r1, [r3, #0]
 8000ed6:	6816      	ldr	r6, [r2, #0]
 8000ed8:	2100      	movs	r1, #0
 8000eda:	0030      	movs	r0, r6
 8000edc:	6862      	ldr	r2, [r4, #4]
 8000ede:	f000 facf 	bl	8001480 <memchr>
 8000ee2:	2800      	cmp	r0, #0
 8000ee4:	d001      	beq.n	8000eea <_printf_i+0x1ca>
 8000ee6:	1b80      	subs	r0, r0, r6
 8000ee8:	6060      	str	r0, [r4, #4]
 8000eea:	6863      	ldr	r3, [r4, #4]
 8000eec:	6123      	str	r3, [r4, #16]
 8000eee:	2300      	movs	r3, #0
 8000ef0:	9a04      	ldr	r2, [sp, #16]
 8000ef2:	7013      	strb	r3, [r2, #0]
 8000ef4:	e7a8      	b.n	8000e48 <_printf_i+0x128>
 8000ef6:	6923      	ldr	r3, [r4, #16]
 8000ef8:	0032      	movs	r2, r6
 8000efa:	9906      	ldr	r1, [sp, #24]
 8000efc:	9805      	ldr	r0, [sp, #20]
 8000efe:	9d07      	ldr	r5, [sp, #28]
 8000f00:	47a8      	blx	r5
 8000f02:	1c43      	adds	r3, r0, #1
 8000f04:	d0aa      	beq.n	8000e5c <_printf_i+0x13c>
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	079b      	lsls	r3, r3, #30
 8000f0a:	d415      	bmi.n	8000f38 <_printf_i+0x218>
 8000f0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f0e:	68e0      	ldr	r0, [r4, #12]
 8000f10:	4298      	cmp	r0, r3
 8000f12:	daa5      	bge.n	8000e60 <_printf_i+0x140>
 8000f14:	0018      	movs	r0, r3
 8000f16:	e7a3      	b.n	8000e60 <_printf_i+0x140>
 8000f18:	0022      	movs	r2, r4
 8000f1a:	2301      	movs	r3, #1
 8000f1c:	9906      	ldr	r1, [sp, #24]
 8000f1e:	9805      	ldr	r0, [sp, #20]
 8000f20:	9e07      	ldr	r6, [sp, #28]
 8000f22:	3219      	adds	r2, #25
 8000f24:	47b0      	blx	r6
 8000f26:	1c43      	adds	r3, r0, #1
 8000f28:	d098      	beq.n	8000e5c <_printf_i+0x13c>
 8000f2a:	3501      	adds	r5, #1
 8000f2c:	68e3      	ldr	r3, [r4, #12]
 8000f2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f30:	1a9b      	subs	r3, r3, r2
 8000f32:	42ab      	cmp	r3, r5
 8000f34:	dcf0      	bgt.n	8000f18 <_printf_i+0x1f8>
 8000f36:	e7e9      	b.n	8000f0c <_printf_i+0x1ec>
 8000f38:	2500      	movs	r5, #0
 8000f3a:	e7f7      	b.n	8000f2c <_printf_i+0x20c>
 8000f3c:	08001669 	.word	0x08001669
 8000f40:	0800167a 	.word	0x0800167a

08000f44 <_sbrk_r>:
 8000f44:	2300      	movs	r3, #0
 8000f46:	b570      	push	{r4, r5, r6, lr}
 8000f48:	4d06      	ldr	r5, [pc, #24]	; (8000f64 <_sbrk_r+0x20>)
 8000f4a:	0004      	movs	r4, r0
 8000f4c:	0008      	movs	r0, r1
 8000f4e:	602b      	str	r3, [r5, #0]
 8000f50:	f7ff fa3a 	bl	80003c8 <_sbrk>
 8000f54:	1c43      	adds	r3, r0, #1
 8000f56:	d103      	bne.n	8000f60 <_sbrk_r+0x1c>
 8000f58:	682b      	ldr	r3, [r5, #0]
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d000      	beq.n	8000f60 <_sbrk_r+0x1c>
 8000f5e:	6023      	str	r3, [r4, #0]
 8000f60:	bd70      	pop	{r4, r5, r6, pc}
 8000f62:	46c0      	nop			; (mov r8, r8)
 8000f64:	20000090 	.word	0x20000090

08000f68 <__sread>:
 8000f68:	b570      	push	{r4, r5, r6, lr}
 8000f6a:	000c      	movs	r4, r1
 8000f6c:	250e      	movs	r5, #14
 8000f6e:	5f49      	ldrsh	r1, [r1, r5]
 8000f70:	f000 faec 	bl	800154c <_read_r>
 8000f74:	2800      	cmp	r0, #0
 8000f76:	db03      	blt.n	8000f80 <__sread+0x18>
 8000f78:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8000f7a:	181b      	adds	r3, r3, r0
 8000f7c:	6563      	str	r3, [r4, #84]	; 0x54
 8000f7e:	bd70      	pop	{r4, r5, r6, pc}
 8000f80:	89a3      	ldrh	r3, [r4, #12]
 8000f82:	4a02      	ldr	r2, [pc, #8]	; (8000f8c <__sread+0x24>)
 8000f84:	4013      	ands	r3, r2
 8000f86:	81a3      	strh	r3, [r4, #12]
 8000f88:	e7f9      	b.n	8000f7e <__sread+0x16>
 8000f8a:	46c0      	nop			; (mov r8, r8)
 8000f8c:	ffffefff 	.word	0xffffefff

08000f90 <__swrite>:
 8000f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f92:	001f      	movs	r7, r3
 8000f94:	898b      	ldrh	r3, [r1, #12]
 8000f96:	0005      	movs	r5, r0
 8000f98:	000c      	movs	r4, r1
 8000f9a:	0016      	movs	r6, r2
 8000f9c:	05db      	lsls	r3, r3, #23
 8000f9e:	d505      	bpl.n	8000fac <__swrite+0x1c>
 8000fa0:	230e      	movs	r3, #14
 8000fa2:	5ec9      	ldrsh	r1, [r1, r3]
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	2302      	movs	r3, #2
 8000fa8:	f000 f9ea 	bl	8001380 <_lseek_r>
 8000fac:	89a3      	ldrh	r3, [r4, #12]
 8000fae:	4a05      	ldr	r2, [pc, #20]	; (8000fc4 <__swrite+0x34>)
 8000fb0:	0028      	movs	r0, r5
 8000fb2:	4013      	ands	r3, r2
 8000fb4:	81a3      	strh	r3, [r4, #12]
 8000fb6:	0032      	movs	r2, r6
 8000fb8:	230e      	movs	r3, #14
 8000fba:	5ee1      	ldrsh	r1, [r4, r3]
 8000fbc:	003b      	movs	r3, r7
 8000fbe:	f000 f875 	bl	80010ac <_write_r>
 8000fc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fc4:	ffffefff 	.word	0xffffefff

08000fc8 <__sseek>:
 8000fc8:	b570      	push	{r4, r5, r6, lr}
 8000fca:	000c      	movs	r4, r1
 8000fcc:	250e      	movs	r5, #14
 8000fce:	5f49      	ldrsh	r1, [r1, r5]
 8000fd0:	f000 f9d6 	bl	8001380 <_lseek_r>
 8000fd4:	89a3      	ldrh	r3, [r4, #12]
 8000fd6:	1c42      	adds	r2, r0, #1
 8000fd8:	d103      	bne.n	8000fe2 <__sseek+0x1a>
 8000fda:	4a05      	ldr	r2, [pc, #20]	; (8000ff0 <__sseek+0x28>)
 8000fdc:	4013      	ands	r3, r2
 8000fde:	81a3      	strh	r3, [r4, #12]
 8000fe0:	bd70      	pop	{r4, r5, r6, pc}
 8000fe2:	2280      	movs	r2, #128	; 0x80
 8000fe4:	0152      	lsls	r2, r2, #5
 8000fe6:	4313      	orrs	r3, r2
 8000fe8:	81a3      	strh	r3, [r4, #12]
 8000fea:	6560      	str	r0, [r4, #84]	; 0x54
 8000fec:	e7f8      	b.n	8000fe0 <__sseek+0x18>
 8000fee:	46c0      	nop			; (mov r8, r8)
 8000ff0:	ffffefff 	.word	0xffffefff

08000ff4 <__sclose>:
 8000ff4:	b510      	push	{r4, lr}
 8000ff6:	230e      	movs	r3, #14
 8000ff8:	5ec9      	ldrsh	r1, [r1, r3]
 8000ffa:	f000 f8e3 	bl	80011c4 <_close_r>
 8000ffe:	bd10      	pop	{r4, pc}

08001000 <__swbuf_r>:
 8001000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001002:	0005      	movs	r5, r0
 8001004:	000e      	movs	r6, r1
 8001006:	0014      	movs	r4, r2
 8001008:	2800      	cmp	r0, #0
 800100a:	d004      	beq.n	8001016 <__swbuf_r+0x16>
 800100c:	6983      	ldr	r3, [r0, #24]
 800100e:	2b00      	cmp	r3, #0
 8001010:	d101      	bne.n	8001016 <__swbuf_r+0x16>
 8001012:	f7ff fb77 	bl	8000704 <__sinit>
 8001016:	4b22      	ldr	r3, [pc, #136]	; (80010a0 <__swbuf_r+0xa0>)
 8001018:	429c      	cmp	r4, r3
 800101a:	d12e      	bne.n	800107a <__swbuf_r+0x7a>
 800101c:	686c      	ldr	r4, [r5, #4]
 800101e:	69a3      	ldr	r3, [r4, #24]
 8001020:	60a3      	str	r3, [r4, #8]
 8001022:	89a3      	ldrh	r3, [r4, #12]
 8001024:	071b      	lsls	r3, r3, #28
 8001026:	d532      	bpl.n	800108e <__swbuf_r+0x8e>
 8001028:	6923      	ldr	r3, [r4, #16]
 800102a:	2b00      	cmp	r3, #0
 800102c:	d02f      	beq.n	800108e <__swbuf_r+0x8e>
 800102e:	6823      	ldr	r3, [r4, #0]
 8001030:	6922      	ldr	r2, [r4, #16]
 8001032:	b2f7      	uxtb	r7, r6
 8001034:	1a98      	subs	r0, r3, r2
 8001036:	6963      	ldr	r3, [r4, #20]
 8001038:	b2f6      	uxtb	r6, r6
 800103a:	4283      	cmp	r3, r0
 800103c:	dc05      	bgt.n	800104a <__swbuf_r+0x4a>
 800103e:	0021      	movs	r1, r4
 8001040:	0028      	movs	r0, r5
 8001042:	f000 f95d 	bl	8001300 <_fflush_r>
 8001046:	2800      	cmp	r0, #0
 8001048:	d127      	bne.n	800109a <__swbuf_r+0x9a>
 800104a:	68a3      	ldr	r3, [r4, #8]
 800104c:	3001      	adds	r0, #1
 800104e:	3b01      	subs	r3, #1
 8001050:	60a3      	str	r3, [r4, #8]
 8001052:	6823      	ldr	r3, [r4, #0]
 8001054:	1c5a      	adds	r2, r3, #1
 8001056:	6022      	str	r2, [r4, #0]
 8001058:	701f      	strb	r7, [r3, #0]
 800105a:	6963      	ldr	r3, [r4, #20]
 800105c:	4283      	cmp	r3, r0
 800105e:	d004      	beq.n	800106a <__swbuf_r+0x6a>
 8001060:	89a3      	ldrh	r3, [r4, #12]
 8001062:	07db      	lsls	r3, r3, #31
 8001064:	d507      	bpl.n	8001076 <__swbuf_r+0x76>
 8001066:	2e0a      	cmp	r6, #10
 8001068:	d105      	bne.n	8001076 <__swbuf_r+0x76>
 800106a:	0021      	movs	r1, r4
 800106c:	0028      	movs	r0, r5
 800106e:	f000 f947 	bl	8001300 <_fflush_r>
 8001072:	2800      	cmp	r0, #0
 8001074:	d111      	bne.n	800109a <__swbuf_r+0x9a>
 8001076:	0030      	movs	r0, r6
 8001078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800107a:	4b0a      	ldr	r3, [pc, #40]	; (80010a4 <__swbuf_r+0xa4>)
 800107c:	429c      	cmp	r4, r3
 800107e:	d101      	bne.n	8001084 <__swbuf_r+0x84>
 8001080:	68ac      	ldr	r4, [r5, #8]
 8001082:	e7cc      	b.n	800101e <__swbuf_r+0x1e>
 8001084:	4b08      	ldr	r3, [pc, #32]	; (80010a8 <__swbuf_r+0xa8>)
 8001086:	429c      	cmp	r4, r3
 8001088:	d1c9      	bne.n	800101e <__swbuf_r+0x1e>
 800108a:	68ec      	ldr	r4, [r5, #12]
 800108c:	e7c7      	b.n	800101e <__swbuf_r+0x1e>
 800108e:	0021      	movs	r1, r4
 8001090:	0028      	movs	r0, r5
 8001092:	f000 f81f 	bl	80010d4 <__swsetup_r>
 8001096:	2800      	cmp	r0, #0
 8001098:	d0c9      	beq.n	800102e <__swbuf_r+0x2e>
 800109a:	2601      	movs	r6, #1
 800109c:	4276      	negs	r6, r6
 800109e:	e7ea      	b.n	8001076 <__swbuf_r+0x76>
 80010a0:	08001618 	.word	0x08001618
 80010a4:	08001638 	.word	0x08001638
 80010a8:	080015f8 	.word	0x080015f8

080010ac <_write_r>:
 80010ac:	b570      	push	{r4, r5, r6, lr}
 80010ae:	0004      	movs	r4, r0
 80010b0:	0008      	movs	r0, r1
 80010b2:	0011      	movs	r1, r2
 80010b4:	001a      	movs	r2, r3
 80010b6:	2300      	movs	r3, #0
 80010b8:	4d05      	ldr	r5, [pc, #20]	; (80010d0 <_write_r+0x24>)
 80010ba:	602b      	str	r3, [r5, #0]
 80010bc:	f7ff f93b 	bl	8000336 <_write>
 80010c0:	1c43      	adds	r3, r0, #1
 80010c2:	d103      	bne.n	80010cc <_write_r+0x20>
 80010c4:	682b      	ldr	r3, [r5, #0]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d000      	beq.n	80010cc <_write_r+0x20>
 80010ca:	6023      	str	r3, [r4, #0]
 80010cc:	bd70      	pop	{r4, r5, r6, pc}
 80010ce:	46c0      	nop			; (mov r8, r8)
 80010d0:	20000090 	.word	0x20000090

080010d4 <__swsetup_r>:
 80010d4:	4b37      	ldr	r3, [pc, #220]	; (80011b4 <__swsetup_r+0xe0>)
 80010d6:	b570      	push	{r4, r5, r6, lr}
 80010d8:	681d      	ldr	r5, [r3, #0]
 80010da:	0006      	movs	r6, r0
 80010dc:	000c      	movs	r4, r1
 80010de:	2d00      	cmp	r5, #0
 80010e0:	d005      	beq.n	80010ee <__swsetup_r+0x1a>
 80010e2:	69ab      	ldr	r3, [r5, #24]
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	d102      	bne.n	80010ee <__swsetup_r+0x1a>
 80010e8:	0028      	movs	r0, r5
 80010ea:	f7ff fb0b 	bl	8000704 <__sinit>
 80010ee:	4b32      	ldr	r3, [pc, #200]	; (80011b8 <__swsetup_r+0xe4>)
 80010f0:	429c      	cmp	r4, r3
 80010f2:	d10f      	bne.n	8001114 <__swsetup_r+0x40>
 80010f4:	686c      	ldr	r4, [r5, #4]
 80010f6:	230c      	movs	r3, #12
 80010f8:	5ee2      	ldrsh	r2, [r4, r3]
 80010fa:	b293      	uxth	r3, r2
 80010fc:	0711      	lsls	r1, r2, #28
 80010fe:	d42d      	bmi.n	800115c <__swsetup_r+0x88>
 8001100:	06d9      	lsls	r1, r3, #27
 8001102:	d411      	bmi.n	8001128 <__swsetup_r+0x54>
 8001104:	2309      	movs	r3, #9
 8001106:	2001      	movs	r0, #1
 8001108:	6033      	str	r3, [r6, #0]
 800110a:	3337      	adds	r3, #55	; 0x37
 800110c:	4313      	orrs	r3, r2
 800110e:	81a3      	strh	r3, [r4, #12]
 8001110:	4240      	negs	r0, r0
 8001112:	bd70      	pop	{r4, r5, r6, pc}
 8001114:	4b29      	ldr	r3, [pc, #164]	; (80011bc <__swsetup_r+0xe8>)
 8001116:	429c      	cmp	r4, r3
 8001118:	d101      	bne.n	800111e <__swsetup_r+0x4a>
 800111a:	68ac      	ldr	r4, [r5, #8]
 800111c:	e7eb      	b.n	80010f6 <__swsetup_r+0x22>
 800111e:	4b28      	ldr	r3, [pc, #160]	; (80011c0 <__swsetup_r+0xec>)
 8001120:	429c      	cmp	r4, r3
 8001122:	d1e8      	bne.n	80010f6 <__swsetup_r+0x22>
 8001124:	68ec      	ldr	r4, [r5, #12]
 8001126:	e7e6      	b.n	80010f6 <__swsetup_r+0x22>
 8001128:	075b      	lsls	r3, r3, #29
 800112a:	d513      	bpl.n	8001154 <__swsetup_r+0x80>
 800112c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800112e:	2900      	cmp	r1, #0
 8001130:	d008      	beq.n	8001144 <__swsetup_r+0x70>
 8001132:	0023      	movs	r3, r4
 8001134:	3344      	adds	r3, #68	; 0x44
 8001136:	4299      	cmp	r1, r3
 8001138:	d002      	beq.n	8001140 <__swsetup_r+0x6c>
 800113a:	0030      	movs	r0, r6
 800113c:	f000 f9bc 	bl	80014b8 <_free_r>
 8001140:	2300      	movs	r3, #0
 8001142:	6363      	str	r3, [r4, #52]	; 0x34
 8001144:	2224      	movs	r2, #36	; 0x24
 8001146:	89a3      	ldrh	r3, [r4, #12]
 8001148:	4393      	bics	r3, r2
 800114a:	81a3      	strh	r3, [r4, #12]
 800114c:	2300      	movs	r3, #0
 800114e:	6063      	str	r3, [r4, #4]
 8001150:	6923      	ldr	r3, [r4, #16]
 8001152:	6023      	str	r3, [r4, #0]
 8001154:	2308      	movs	r3, #8
 8001156:	89a2      	ldrh	r2, [r4, #12]
 8001158:	4313      	orrs	r3, r2
 800115a:	81a3      	strh	r3, [r4, #12]
 800115c:	6923      	ldr	r3, [r4, #16]
 800115e:	2b00      	cmp	r3, #0
 8001160:	d10b      	bne.n	800117a <__swsetup_r+0xa6>
 8001162:	21a0      	movs	r1, #160	; 0xa0
 8001164:	2280      	movs	r2, #128	; 0x80
 8001166:	89a3      	ldrh	r3, [r4, #12]
 8001168:	0089      	lsls	r1, r1, #2
 800116a:	0092      	lsls	r2, r2, #2
 800116c:	400b      	ands	r3, r1
 800116e:	4293      	cmp	r3, r2
 8001170:	d003      	beq.n	800117a <__swsetup_r+0xa6>
 8001172:	0021      	movs	r1, r4
 8001174:	0030      	movs	r0, r6
 8001176:	f000 f93f 	bl	80013f8 <__smakebuf_r>
 800117a:	220c      	movs	r2, #12
 800117c:	5ea3      	ldrsh	r3, [r4, r2]
 800117e:	2001      	movs	r0, #1
 8001180:	001a      	movs	r2, r3
 8001182:	b299      	uxth	r1, r3
 8001184:	4002      	ands	r2, r0
 8001186:	4203      	tst	r3, r0
 8001188:	d00f      	beq.n	80011aa <__swsetup_r+0xd6>
 800118a:	2200      	movs	r2, #0
 800118c:	60a2      	str	r2, [r4, #8]
 800118e:	6962      	ldr	r2, [r4, #20]
 8001190:	4252      	negs	r2, r2
 8001192:	61a2      	str	r2, [r4, #24]
 8001194:	2000      	movs	r0, #0
 8001196:	6922      	ldr	r2, [r4, #16]
 8001198:	4282      	cmp	r2, r0
 800119a:	d1ba      	bne.n	8001112 <__swsetup_r+0x3e>
 800119c:	060a      	lsls	r2, r1, #24
 800119e:	d5b8      	bpl.n	8001112 <__swsetup_r+0x3e>
 80011a0:	2240      	movs	r2, #64	; 0x40
 80011a2:	4313      	orrs	r3, r2
 80011a4:	81a3      	strh	r3, [r4, #12]
 80011a6:	3801      	subs	r0, #1
 80011a8:	e7b3      	b.n	8001112 <__swsetup_r+0x3e>
 80011aa:	0788      	lsls	r0, r1, #30
 80011ac:	d400      	bmi.n	80011b0 <__swsetup_r+0xdc>
 80011ae:	6962      	ldr	r2, [r4, #20]
 80011b0:	60a2      	str	r2, [r4, #8]
 80011b2:	e7ef      	b.n	8001194 <__swsetup_r+0xc0>
 80011b4:	20000000 	.word	0x20000000
 80011b8:	08001618 	.word	0x08001618
 80011bc:	08001638 	.word	0x08001638
 80011c0:	080015f8 	.word	0x080015f8

080011c4 <_close_r>:
 80011c4:	2300      	movs	r3, #0
 80011c6:	b570      	push	{r4, r5, r6, lr}
 80011c8:	4d06      	ldr	r5, [pc, #24]	; (80011e4 <_close_r+0x20>)
 80011ca:	0004      	movs	r4, r0
 80011cc:	0008      	movs	r0, r1
 80011ce:	602b      	str	r3, [r5, #0]
 80011d0:	f7ff f8cd 	bl	800036e <_close>
 80011d4:	1c43      	adds	r3, r0, #1
 80011d6:	d103      	bne.n	80011e0 <_close_r+0x1c>
 80011d8:	682b      	ldr	r3, [r5, #0]
 80011da:	2b00      	cmp	r3, #0
 80011dc:	d000      	beq.n	80011e0 <_close_r+0x1c>
 80011de:	6023      	str	r3, [r4, #0]
 80011e0:	bd70      	pop	{r4, r5, r6, pc}
 80011e2:	46c0      	nop			; (mov r8, r8)
 80011e4:	20000090 	.word	0x20000090

080011e8 <__sflush_r>:
 80011e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011ea:	898b      	ldrh	r3, [r1, #12]
 80011ec:	0005      	movs	r5, r0
 80011ee:	000c      	movs	r4, r1
 80011f0:	071a      	lsls	r2, r3, #28
 80011f2:	d45f      	bmi.n	80012b4 <__sflush_r+0xcc>
 80011f4:	684a      	ldr	r2, [r1, #4]
 80011f6:	2a00      	cmp	r2, #0
 80011f8:	dc04      	bgt.n	8001204 <__sflush_r+0x1c>
 80011fa:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80011fc:	2a00      	cmp	r2, #0
 80011fe:	dc01      	bgt.n	8001204 <__sflush_r+0x1c>
 8001200:	2000      	movs	r0, #0
 8001202:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001204:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8001206:	2f00      	cmp	r7, #0
 8001208:	d0fa      	beq.n	8001200 <__sflush_r+0x18>
 800120a:	2200      	movs	r2, #0
 800120c:	2180      	movs	r1, #128	; 0x80
 800120e:	682e      	ldr	r6, [r5, #0]
 8001210:	602a      	str	r2, [r5, #0]
 8001212:	001a      	movs	r2, r3
 8001214:	0149      	lsls	r1, r1, #5
 8001216:	400a      	ands	r2, r1
 8001218:	420b      	tst	r3, r1
 800121a:	d034      	beq.n	8001286 <__sflush_r+0x9e>
 800121c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800121e:	89a3      	ldrh	r3, [r4, #12]
 8001220:	075b      	lsls	r3, r3, #29
 8001222:	d506      	bpl.n	8001232 <__sflush_r+0x4a>
 8001224:	6863      	ldr	r3, [r4, #4]
 8001226:	1ac0      	subs	r0, r0, r3
 8001228:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800122a:	2b00      	cmp	r3, #0
 800122c:	d001      	beq.n	8001232 <__sflush_r+0x4a>
 800122e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001230:	1ac0      	subs	r0, r0, r3
 8001232:	0002      	movs	r2, r0
 8001234:	6a21      	ldr	r1, [r4, #32]
 8001236:	2300      	movs	r3, #0
 8001238:	0028      	movs	r0, r5
 800123a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800123c:	47b8      	blx	r7
 800123e:	89a1      	ldrh	r1, [r4, #12]
 8001240:	1c43      	adds	r3, r0, #1
 8001242:	d106      	bne.n	8001252 <__sflush_r+0x6a>
 8001244:	682b      	ldr	r3, [r5, #0]
 8001246:	2b1d      	cmp	r3, #29
 8001248:	d831      	bhi.n	80012ae <__sflush_r+0xc6>
 800124a:	4a2c      	ldr	r2, [pc, #176]	; (80012fc <__sflush_r+0x114>)
 800124c:	40da      	lsrs	r2, r3
 800124e:	07d3      	lsls	r3, r2, #31
 8001250:	d52d      	bpl.n	80012ae <__sflush_r+0xc6>
 8001252:	2300      	movs	r3, #0
 8001254:	6063      	str	r3, [r4, #4]
 8001256:	6923      	ldr	r3, [r4, #16]
 8001258:	6023      	str	r3, [r4, #0]
 800125a:	04cb      	lsls	r3, r1, #19
 800125c:	d505      	bpl.n	800126a <__sflush_r+0x82>
 800125e:	1c43      	adds	r3, r0, #1
 8001260:	d102      	bne.n	8001268 <__sflush_r+0x80>
 8001262:	682b      	ldr	r3, [r5, #0]
 8001264:	2b00      	cmp	r3, #0
 8001266:	d100      	bne.n	800126a <__sflush_r+0x82>
 8001268:	6560      	str	r0, [r4, #84]	; 0x54
 800126a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800126c:	602e      	str	r6, [r5, #0]
 800126e:	2900      	cmp	r1, #0
 8001270:	d0c6      	beq.n	8001200 <__sflush_r+0x18>
 8001272:	0023      	movs	r3, r4
 8001274:	3344      	adds	r3, #68	; 0x44
 8001276:	4299      	cmp	r1, r3
 8001278:	d002      	beq.n	8001280 <__sflush_r+0x98>
 800127a:	0028      	movs	r0, r5
 800127c:	f000 f91c 	bl	80014b8 <_free_r>
 8001280:	2000      	movs	r0, #0
 8001282:	6360      	str	r0, [r4, #52]	; 0x34
 8001284:	e7bd      	b.n	8001202 <__sflush_r+0x1a>
 8001286:	2301      	movs	r3, #1
 8001288:	0028      	movs	r0, r5
 800128a:	6a21      	ldr	r1, [r4, #32]
 800128c:	47b8      	blx	r7
 800128e:	1c43      	adds	r3, r0, #1
 8001290:	d1c5      	bne.n	800121e <__sflush_r+0x36>
 8001292:	682b      	ldr	r3, [r5, #0]
 8001294:	2b00      	cmp	r3, #0
 8001296:	d0c2      	beq.n	800121e <__sflush_r+0x36>
 8001298:	2b1d      	cmp	r3, #29
 800129a:	d001      	beq.n	80012a0 <__sflush_r+0xb8>
 800129c:	2b16      	cmp	r3, #22
 800129e:	d101      	bne.n	80012a4 <__sflush_r+0xbc>
 80012a0:	602e      	str	r6, [r5, #0]
 80012a2:	e7ad      	b.n	8001200 <__sflush_r+0x18>
 80012a4:	2340      	movs	r3, #64	; 0x40
 80012a6:	89a2      	ldrh	r2, [r4, #12]
 80012a8:	4313      	orrs	r3, r2
 80012aa:	81a3      	strh	r3, [r4, #12]
 80012ac:	e7a9      	b.n	8001202 <__sflush_r+0x1a>
 80012ae:	2340      	movs	r3, #64	; 0x40
 80012b0:	430b      	orrs	r3, r1
 80012b2:	e7fa      	b.n	80012aa <__sflush_r+0xc2>
 80012b4:	690f      	ldr	r7, [r1, #16]
 80012b6:	2f00      	cmp	r7, #0
 80012b8:	d0a2      	beq.n	8001200 <__sflush_r+0x18>
 80012ba:	680a      	ldr	r2, [r1, #0]
 80012bc:	600f      	str	r7, [r1, #0]
 80012be:	1bd2      	subs	r2, r2, r7
 80012c0:	9201      	str	r2, [sp, #4]
 80012c2:	2200      	movs	r2, #0
 80012c4:	079b      	lsls	r3, r3, #30
 80012c6:	d100      	bne.n	80012ca <__sflush_r+0xe2>
 80012c8:	694a      	ldr	r2, [r1, #20]
 80012ca:	60a2      	str	r2, [r4, #8]
 80012cc:	9b01      	ldr	r3, [sp, #4]
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	dc00      	bgt.n	80012d4 <__sflush_r+0xec>
 80012d2:	e795      	b.n	8001200 <__sflush_r+0x18>
 80012d4:	003a      	movs	r2, r7
 80012d6:	0028      	movs	r0, r5
 80012d8:	9b01      	ldr	r3, [sp, #4]
 80012da:	6a21      	ldr	r1, [r4, #32]
 80012dc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80012de:	47b0      	blx	r6
 80012e0:	2800      	cmp	r0, #0
 80012e2:	dc06      	bgt.n	80012f2 <__sflush_r+0x10a>
 80012e4:	2340      	movs	r3, #64	; 0x40
 80012e6:	2001      	movs	r0, #1
 80012e8:	89a2      	ldrh	r2, [r4, #12]
 80012ea:	4240      	negs	r0, r0
 80012ec:	4313      	orrs	r3, r2
 80012ee:	81a3      	strh	r3, [r4, #12]
 80012f0:	e787      	b.n	8001202 <__sflush_r+0x1a>
 80012f2:	9b01      	ldr	r3, [sp, #4]
 80012f4:	183f      	adds	r7, r7, r0
 80012f6:	1a1b      	subs	r3, r3, r0
 80012f8:	9301      	str	r3, [sp, #4]
 80012fa:	e7e7      	b.n	80012cc <__sflush_r+0xe4>
 80012fc:	20400001 	.word	0x20400001

08001300 <_fflush_r>:
 8001300:	690b      	ldr	r3, [r1, #16]
 8001302:	b570      	push	{r4, r5, r6, lr}
 8001304:	0005      	movs	r5, r0
 8001306:	000c      	movs	r4, r1
 8001308:	2b00      	cmp	r3, #0
 800130a:	d102      	bne.n	8001312 <_fflush_r+0x12>
 800130c:	2500      	movs	r5, #0
 800130e:	0028      	movs	r0, r5
 8001310:	bd70      	pop	{r4, r5, r6, pc}
 8001312:	2800      	cmp	r0, #0
 8001314:	d004      	beq.n	8001320 <_fflush_r+0x20>
 8001316:	6983      	ldr	r3, [r0, #24]
 8001318:	2b00      	cmp	r3, #0
 800131a:	d101      	bne.n	8001320 <_fflush_r+0x20>
 800131c:	f7ff f9f2 	bl	8000704 <__sinit>
 8001320:	4b14      	ldr	r3, [pc, #80]	; (8001374 <_fflush_r+0x74>)
 8001322:	429c      	cmp	r4, r3
 8001324:	d11b      	bne.n	800135e <_fflush_r+0x5e>
 8001326:	686c      	ldr	r4, [r5, #4]
 8001328:	220c      	movs	r2, #12
 800132a:	5ea3      	ldrsh	r3, [r4, r2]
 800132c:	2b00      	cmp	r3, #0
 800132e:	d0ed      	beq.n	800130c <_fflush_r+0xc>
 8001330:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001332:	07d2      	lsls	r2, r2, #31
 8001334:	d404      	bmi.n	8001340 <_fflush_r+0x40>
 8001336:	059b      	lsls	r3, r3, #22
 8001338:	d402      	bmi.n	8001340 <_fflush_r+0x40>
 800133a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800133c:	f7ff fa83 	bl	8000846 <__retarget_lock_acquire_recursive>
 8001340:	0028      	movs	r0, r5
 8001342:	0021      	movs	r1, r4
 8001344:	f7ff ff50 	bl	80011e8 <__sflush_r>
 8001348:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800134a:	0005      	movs	r5, r0
 800134c:	07db      	lsls	r3, r3, #31
 800134e:	d4de      	bmi.n	800130e <_fflush_r+0xe>
 8001350:	89a3      	ldrh	r3, [r4, #12]
 8001352:	059b      	lsls	r3, r3, #22
 8001354:	d4db      	bmi.n	800130e <_fflush_r+0xe>
 8001356:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001358:	f7ff fa76 	bl	8000848 <__retarget_lock_release_recursive>
 800135c:	e7d7      	b.n	800130e <_fflush_r+0xe>
 800135e:	4b06      	ldr	r3, [pc, #24]	; (8001378 <_fflush_r+0x78>)
 8001360:	429c      	cmp	r4, r3
 8001362:	d101      	bne.n	8001368 <_fflush_r+0x68>
 8001364:	68ac      	ldr	r4, [r5, #8]
 8001366:	e7df      	b.n	8001328 <_fflush_r+0x28>
 8001368:	4b04      	ldr	r3, [pc, #16]	; (800137c <_fflush_r+0x7c>)
 800136a:	429c      	cmp	r4, r3
 800136c:	d1dc      	bne.n	8001328 <_fflush_r+0x28>
 800136e:	68ec      	ldr	r4, [r5, #12]
 8001370:	e7da      	b.n	8001328 <_fflush_r+0x28>
 8001372:	46c0      	nop			; (mov r8, r8)
 8001374:	08001618 	.word	0x08001618
 8001378:	08001638 	.word	0x08001638
 800137c:	080015f8 	.word	0x080015f8

08001380 <_lseek_r>:
 8001380:	b570      	push	{r4, r5, r6, lr}
 8001382:	0004      	movs	r4, r0
 8001384:	0008      	movs	r0, r1
 8001386:	0011      	movs	r1, r2
 8001388:	001a      	movs	r2, r3
 800138a:	2300      	movs	r3, #0
 800138c:	4d05      	ldr	r5, [pc, #20]	; (80013a4 <_lseek_r+0x24>)
 800138e:	602b      	str	r3, [r5, #0]
 8001390:	f7ff f80e 	bl	80003b0 <_lseek>
 8001394:	1c43      	adds	r3, r0, #1
 8001396:	d103      	bne.n	80013a0 <_lseek_r+0x20>
 8001398:	682b      	ldr	r3, [r5, #0]
 800139a:	2b00      	cmp	r3, #0
 800139c:	d000      	beq.n	80013a0 <_lseek_r+0x20>
 800139e:	6023      	str	r3, [r4, #0]
 80013a0:	bd70      	pop	{r4, r5, r6, pc}
 80013a2:	46c0      	nop			; (mov r8, r8)
 80013a4:	20000090 	.word	0x20000090

080013a8 <__swhatbuf_r>:
 80013a8:	b570      	push	{r4, r5, r6, lr}
 80013aa:	000e      	movs	r6, r1
 80013ac:	001d      	movs	r5, r3
 80013ae:	230e      	movs	r3, #14
 80013b0:	5ec9      	ldrsh	r1, [r1, r3]
 80013b2:	0014      	movs	r4, r2
 80013b4:	b096      	sub	sp, #88	; 0x58
 80013b6:	2900      	cmp	r1, #0
 80013b8:	da08      	bge.n	80013cc <__swhatbuf_r+0x24>
 80013ba:	220c      	movs	r2, #12
 80013bc:	5eb3      	ldrsh	r3, [r6, r2]
 80013be:	2200      	movs	r2, #0
 80013c0:	602a      	str	r2, [r5, #0]
 80013c2:	061b      	lsls	r3, r3, #24
 80013c4:	d411      	bmi.n	80013ea <__swhatbuf_r+0x42>
 80013c6:	2380      	movs	r3, #128	; 0x80
 80013c8:	00db      	lsls	r3, r3, #3
 80013ca:	e00f      	b.n	80013ec <__swhatbuf_r+0x44>
 80013cc:	466a      	mov	r2, sp
 80013ce:	f000 f8d1 	bl	8001574 <_fstat_r>
 80013d2:	2800      	cmp	r0, #0
 80013d4:	dbf1      	blt.n	80013ba <__swhatbuf_r+0x12>
 80013d6:	23f0      	movs	r3, #240	; 0xf0
 80013d8:	9901      	ldr	r1, [sp, #4]
 80013da:	021b      	lsls	r3, r3, #8
 80013dc:	4019      	ands	r1, r3
 80013de:	4b05      	ldr	r3, [pc, #20]	; (80013f4 <__swhatbuf_r+0x4c>)
 80013e0:	18c9      	adds	r1, r1, r3
 80013e2:	424b      	negs	r3, r1
 80013e4:	4159      	adcs	r1, r3
 80013e6:	6029      	str	r1, [r5, #0]
 80013e8:	e7ed      	b.n	80013c6 <__swhatbuf_r+0x1e>
 80013ea:	2340      	movs	r3, #64	; 0x40
 80013ec:	2000      	movs	r0, #0
 80013ee:	6023      	str	r3, [r4, #0]
 80013f0:	b016      	add	sp, #88	; 0x58
 80013f2:	bd70      	pop	{r4, r5, r6, pc}
 80013f4:	ffffe000 	.word	0xffffe000

080013f8 <__smakebuf_r>:
 80013f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013fa:	2602      	movs	r6, #2
 80013fc:	898b      	ldrh	r3, [r1, #12]
 80013fe:	0005      	movs	r5, r0
 8001400:	000c      	movs	r4, r1
 8001402:	4233      	tst	r3, r6
 8001404:	d006      	beq.n	8001414 <__smakebuf_r+0x1c>
 8001406:	0023      	movs	r3, r4
 8001408:	3347      	adds	r3, #71	; 0x47
 800140a:	6023      	str	r3, [r4, #0]
 800140c:	6123      	str	r3, [r4, #16]
 800140e:	2301      	movs	r3, #1
 8001410:	6163      	str	r3, [r4, #20]
 8001412:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001414:	466a      	mov	r2, sp
 8001416:	ab01      	add	r3, sp, #4
 8001418:	f7ff ffc6 	bl	80013a8 <__swhatbuf_r>
 800141c:	9900      	ldr	r1, [sp, #0]
 800141e:	0007      	movs	r7, r0
 8001420:	0028      	movs	r0, r5
 8001422:	f7ff fa35 	bl	8000890 <_malloc_r>
 8001426:	2800      	cmp	r0, #0
 8001428:	d108      	bne.n	800143c <__smakebuf_r+0x44>
 800142a:	220c      	movs	r2, #12
 800142c:	5ea3      	ldrsh	r3, [r4, r2]
 800142e:	059a      	lsls	r2, r3, #22
 8001430:	d4ef      	bmi.n	8001412 <__smakebuf_r+0x1a>
 8001432:	2203      	movs	r2, #3
 8001434:	4393      	bics	r3, r2
 8001436:	431e      	orrs	r6, r3
 8001438:	81a6      	strh	r6, [r4, #12]
 800143a:	e7e4      	b.n	8001406 <__smakebuf_r+0xe>
 800143c:	4b0f      	ldr	r3, [pc, #60]	; (800147c <__smakebuf_r+0x84>)
 800143e:	62ab      	str	r3, [r5, #40]	; 0x28
 8001440:	2380      	movs	r3, #128	; 0x80
 8001442:	89a2      	ldrh	r2, [r4, #12]
 8001444:	6020      	str	r0, [r4, #0]
 8001446:	4313      	orrs	r3, r2
 8001448:	81a3      	strh	r3, [r4, #12]
 800144a:	9b00      	ldr	r3, [sp, #0]
 800144c:	6120      	str	r0, [r4, #16]
 800144e:	6163      	str	r3, [r4, #20]
 8001450:	9b01      	ldr	r3, [sp, #4]
 8001452:	2b00      	cmp	r3, #0
 8001454:	d00d      	beq.n	8001472 <__smakebuf_r+0x7a>
 8001456:	0028      	movs	r0, r5
 8001458:	230e      	movs	r3, #14
 800145a:	5ee1      	ldrsh	r1, [r4, r3]
 800145c:	f000 f89c 	bl	8001598 <_isatty_r>
 8001460:	2800      	cmp	r0, #0
 8001462:	d006      	beq.n	8001472 <__smakebuf_r+0x7a>
 8001464:	2203      	movs	r2, #3
 8001466:	89a3      	ldrh	r3, [r4, #12]
 8001468:	4393      	bics	r3, r2
 800146a:	001a      	movs	r2, r3
 800146c:	2301      	movs	r3, #1
 800146e:	4313      	orrs	r3, r2
 8001470:	81a3      	strh	r3, [r4, #12]
 8001472:	89a0      	ldrh	r0, [r4, #12]
 8001474:	4307      	orrs	r7, r0
 8001476:	81a7      	strh	r7, [r4, #12]
 8001478:	e7cb      	b.n	8001412 <__smakebuf_r+0x1a>
 800147a:	46c0      	nop			; (mov r8, r8)
 800147c:	08000689 	.word	0x08000689

08001480 <memchr>:
 8001480:	b2c9      	uxtb	r1, r1
 8001482:	1882      	adds	r2, r0, r2
 8001484:	4290      	cmp	r0, r2
 8001486:	d101      	bne.n	800148c <memchr+0xc>
 8001488:	2000      	movs	r0, #0
 800148a:	4770      	bx	lr
 800148c:	7803      	ldrb	r3, [r0, #0]
 800148e:	428b      	cmp	r3, r1
 8001490:	d0fb      	beq.n	800148a <memchr+0xa>
 8001492:	3001      	adds	r0, #1
 8001494:	e7f6      	b.n	8001484 <memchr+0x4>
	...

08001498 <__malloc_lock>:
 8001498:	b510      	push	{r4, lr}
 800149a:	4802      	ldr	r0, [pc, #8]	; (80014a4 <__malloc_lock+0xc>)
 800149c:	f7ff f9d3 	bl	8000846 <__retarget_lock_acquire_recursive>
 80014a0:	bd10      	pop	{r4, pc}
 80014a2:	46c0      	nop			; (mov r8, r8)
 80014a4:	20000084 	.word	0x20000084

080014a8 <__malloc_unlock>:
 80014a8:	b510      	push	{r4, lr}
 80014aa:	4802      	ldr	r0, [pc, #8]	; (80014b4 <__malloc_unlock+0xc>)
 80014ac:	f7ff f9cc 	bl	8000848 <__retarget_lock_release_recursive>
 80014b0:	bd10      	pop	{r4, pc}
 80014b2:	46c0      	nop			; (mov r8, r8)
 80014b4:	20000084 	.word	0x20000084

080014b8 <_free_r>:
 80014b8:	b570      	push	{r4, r5, r6, lr}
 80014ba:	0005      	movs	r5, r0
 80014bc:	2900      	cmp	r1, #0
 80014be:	d010      	beq.n	80014e2 <_free_r+0x2a>
 80014c0:	1f0c      	subs	r4, r1, #4
 80014c2:	6823      	ldr	r3, [r4, #0]
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	da00      	bge.n	80014ca <_free_r+0x12>
 80014c8:	18e4      	adds	r4, r4, r3
 80014ca:	0028      	movs	r0, r5
 80014cc:	f7ff ffe4 	bl	8001498 <__malloc_lock>
 80014d0:	4a1d      	ldr	r2, [pc, #116]	; (8001548 <_free_r+0x90>)
 80014d2:	6813      	ldr	r3, [r2, #0]
 80014d4:	2b00      	cmp	r3, #0
 80014d6:	d105      	bne.n	80014e4 <_free_r+0x2c>
 80014d8:	6063      	str	r3, [r4, #4]
 80014da:	6014      	str	r4, [r2, #0]
 80014dc:	0028      	movs	r0, r5
 80014de:	f7ff ffe3 	bl	80014a8 <__malloc_unlock>
 80014e2:	bd70      	pop	{r4, r5, r6, pc}
 80014e4:	42a3      	cmp	r3, r4
 80014e6:	d908      	bls.n	80014fa <_free_r+0x42>
 80014e8:	6821      	ldr	r1, [r4, #0]
 80014ea:	1860      	adds	r0, r4, r1
 80014ec:	4283      	cmp	r3, r0
 80014ee:	d1f3      	bne.n	80014d8 <_free_r+0x20>
 80014f0:	6818      	ldr	r0, [r3, #0]
 80014f2:	685b      	ldr	r3, [r3, #4]
 80014f4:	1841      	adds	r1, r0, r1
 80014f6:	6021      	str	r1, [r4, #0]
 80014f8:	e7ee      	b.n	80014d8 <_free_r+0x20>
 80014fa:	001a      	movs	r2, r3
 80014fc:	685b      	ldr	r3, [r3, #4]
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d001      	beq.n	8001506 <_free_r+0x4e>
 8001502:	42a3      	cmp	r3, r4
 8001504:	d9f9      	bls.n	80014fa <_free_r+0x42>
 8001506:	6811      	ldr	r1, [r2, #0]
 8001508:	1850      	adds	r0, r2, r1
 800150a:	42a0      	cmp	r0, r4
 800150c:	d10b      	bne.n	8001526 <_free_r+0x6e>
 800150e:	6820      	ldr	r0, [r4, #0]
 8001510:	1809      	adds	r1, r1, r0
 8001512:	1850      	adds	r0, r2, r1
 8001514:	6011      	str	r1, [r2, #0]
 8001516:	4283      	cmp	r3, r0
 8001518:	d1e0      	bne.n	80014dc <_free_r+0x24>
 800151a:	6818      	ldr	r0, [r3, #0]
 800151c:	685b      	ldr	r3, [r3, #4]
 800151e:	1841      	adds	r1, r0, r1
 8001520:	6011      	str	r1, [r2, #0]
 8001522:	6053      	str	r3, [r2, #4]
 8001524:	e7da      	b.n	80014dc <_free_r+0x24>
 8001526:	42a0      	cmp	r0, r4
 8001528:	d902      	bls.n	8001530 <_free_r+0x78>
 800152a:	230c      	movs	r3, #12
 800152c:	602b      	str	r3, [r5, #0]
 800152e:	e7d5      	b.n	80014dc <_free_r+0x24>
 8001530:	6821      	ldr	r1, [r4, #0]
 8001532:	1860      	adds	r0, r4, r1
 8001534:	4283      	cmp	r3, r0
 8001536:	d103      	bne.n	8001540 <_free_r+0x88>
 8001538:	6818      	ldr	r0, [r3, #0]
 800153a:	685b      	ldr	r3, [r3, #4]
 800153c:	1841      	adds	r1, r0, r1
 800153e:	6021      	str	r1, [r4, #0]
 8001540:	6063      	str	r3, [r4, #4]
 8001542:	6054      	str	r4, [r2, #4]
 8001544:	e7ca      	b.n	80014dc <_free_r+0x24>
 8001546:	46c0      	nop			; (mov r8, r8)
 8001548:	20000088 	.word	0x20000088

0800154c <_read_r>:
 800154c:	b570      	push	{r4, r5, r6, lr}
 800154e:	0004      	movs	r4, r0
 8001550:	0008      	movs	r0, r1
 8001552:	0011      	movs	r1, r2
 8001554:	001a      	movs	r2, r3
 8001556:	2300      	movs	r3, #0
 8001558:	4d05      	ldr	r5, [pc, #20]	; (8001570 <_read_r+0x24>)
 800155a:	602b      	str	r3, [r5, #0]
 800155c:	f7fe fece 	bl	80002fc <_read>
 8001560:	1c43      	adds	r3, r0, #1
 8001562:	d103      	bne.n	800156c <_read_r+0x20>
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	2b00      	cmp	r3, #0
 8001568:	d000      	beq.n	800156c <_read_r+0x20>
 800156a:	6023      	str	r3, [r4, #0]
 800156c:	bd70      	pop	{r4, r5, r6, pc}
 800156e:	46c0      	nop			; (mov r8, r8)
 8001570:	20000090 	.word	0x20000090

08001574 <_fstat_r>:
 8001574:	2300      	movs	r3, #0
 8001576:	b570      	push	{r4, r5, r6, lr}
 8001578:	4d06      	ldr	r5, [pc, #24]	; (8001594 <_fstat_r+0x20>)
 800157a:	0004      	movs	r4, r0
 800157c:	0008      	movs	r0, r1
 800157e:	0011      	movs	r1, r2
 8001580:	602b      	str	r3, [r5, #0]
 8001582:	f7fe fefe 	bl	8000382 <_fstat>
 8001586:	1c43      	adds	r3, r0, #1
 8001588:	d103      	bne.n	8001592 <_fstat_r+0x1e>
 800158a:	682b      	ldr	r3, [r5, #0]
 800158c:	2b00      	cmp	r3, #0
 800158e:	d000      	beq.n	8001592 <_fstat_r+0x1e>
 8001590:	6023      	str	r3, [r4, #0]
 8001592:	bd70      	pop	{r4, r5, r6, pc}
 8001594:	20000090 	.word	0x20000090

08001598 <_isatty_r>:
 8001598:	2300      	movs	r3, #0
 800159a:	b570      	push	{r4, r5, r6, lr}
 800159c:	4d06      	ldr	r5, [pc, #24]	; (80015b8 <_isatty_r+0x20>)
 800159e:	0004      	movs	r4, r0
 80015a0:	0008      	movs	r0, r1
 80015a2:	602b      	str	r3, [r5, #0]
 80015a4:	f7fe fefb 	bl	800039e <_isatty>
 80015a8:	1c43      	adds	r3, r0, #1
 80015aa:	d103      	bne.n	80015b4 <_isatty_r+0x1c>
 80015ac:	682b      	ldr	r3, [r5, #0]
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d000      	beq.n	80015b4 <_isatty_r+0x1c>
 80015b2:	6023      	str	r3, [r4, #0]
 80015b4:	bd70      	pop	{r4, r5, r6, pc}
 80015b6:	46c0      	nop			; (mov r8, r8)
 80015b8:	20000090 	.word	0x20000090

080015bc <_init>:
 80015bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015be:	46c0      	nop			; (mov r8, r8)
 80015c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015c2:	bc08      	pop	{r3}
 80015c4:	469e      	mov	lr, r3
 80015c6:	4770      	bx	lr

080015c8 <_fini>:
 80015c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ca:	46c0      	nop			; (mov r8, r8)
 80015cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ce:	bc08      	pop	{r3}
 80015d0:	469e      	mov	lr, r3
 80015d2:	4770      	bx	lr
